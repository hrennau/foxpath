namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://purl.oclc.org/dsdl/schematron"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"

# Schema generated 2017-07-10T17:55:54Z
# Edition: VersionÂ 3.2.0. Last updated on
#	10th July 2017, revision 0fcf651
# This material is dual-licensed.
# [http://creativecommons.org/licenses/by/3.0/] Distributed under a Creative Commons Attribution 3.0 Unported License.  [http://www.opensource.org/licenses/BSD-2-Clause] Copyright 2017 TEI Consortium. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. This software is provided by the copyright holders and contributors "as is" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage. TEI material can be licensed differently depending on the use you intend to make of it. Hence it is made available under both the CC+BY and BSD-2 licences. The CC+BY licence is generally appropriate for usages which treat TEI content as data or documentation. The BSD-2 licence is generally appropriate for usage of TEI content in a software environment. For further information or clarification, please contact the TEI Consortium. The TEI Header

# Definitions from module header

# Set global predeclared macros

# Set predeclared macros

# 0. predeclared macros

# 1. classes
att.patternReplacement.attributes =
  att.patternReplacement.attribute.matchPattern,
  att.patternReplacement.attribute.replacementPattern
att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
att.patternReplacement.attribute.replacementPattern =
  
  ## specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in the matchPattern which, once subpattern substitution has been performed, complete the URI.
  attribute replacementPattern { text }
# 2. elements
abstract =
  
  ## contains a summary or formal abstract prefixed to an existing source document by the encoder. []
  element abstract { abstract.content, abstract.localattributes }
abstract.content = (model.pLike | model.listLike)+
abstract.localattributes = att.global.attributes, empty
appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. []
  element appInfo { appInfo.content, appInfo.localattributes }
appInfo.content = model.applicationLike+
appInfo.localattributes = att.global.attributes, empty
application =
  
  ## provides information about an application which has acted upon the document. []
  element application {
    application.content, application.localattributes
  }
application.content = model.labelLike+, (model.ptrLike* | model.pLike*)
application.localattributes =
  att.global.attributes,
  att.typed.attributes,
  att.datable.attributes,
  
  ## supplies an identifier for the application, independent of its version number or display name.
  attribute ident { xsd:Name },
  
  ## supplies a version number for the application, independent of its identifier or display name.
  attribute version {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  },
  empty
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. []
  element authority { authority.content, authority.localattributes }
authority.content = macro.phraseSeq.limited
authority.localattributes = att.global.attributes, empty
availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. []
  element availability {
    availability.content, availability.localattributes
  }
availability.content = (model.availabilityPart | model.pLike)+
availability.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## supplies a code identifying the current availability of the text.
  [ a:defaultValue = "unknown" ]
  attribute status {
    
    ## the text is freely available.
    "free"
    | 
      ## the status of the text is unknown.
      "unknown"
    | 
      ## the text is not freely available.
      "restricted"
  }?,
  empty
biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [   ]
  element biblFull { biblFull.content, biblFull.localattributes }
biblFull.content =
  ((titleStmt,
    editionStmt?,
    extent?,
    publicationStmt,
    seriesStmt?,
    notesStmt?),
   sourceDesc*)
  | (fileDesc, profileDesc)
biblFull.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  att.sortable.attributes,
  att.docStatus.attributes,
  empty
cRefPattern =
  
  ## (canonical reference pattern) specifies an expression and replacement pattern for transforming a canonical reference into a URI. [  ]
  element cRefPattern {
    cRefPattern.content, cRefPattern.localattributes
  }
cRefPattern.content = model.pLike*
cRefPattern.localattributes =
  att.global.attributes, att.patternReplacement.attributes, empty
calendar =
  
  ## describes a calendar or dating system used in a dating formula in the text. []
  element calendar { calendar.content, calendar.localattributes }
calendar.content = model.pLike+
calendar.localattributes =
  att.global.attributes, att.pointing.attributes, empty
calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [ ]
  element calendarDesc {
    calendarDesc.content, calendarDesc.localattributes
  }
calendarDesc.content = calendar+
calendarDesc.localattributes = att.global.attributes, empty
catDesc =
  
  ## (category description) describes some category within a taxonomy or text typology, either in the form of a brief prose description or in terms of the situational parameters used by the TEI formal textDesc. []
  element catDesc { catDesc.content, catDesc.localattributes }
catDesc.content = (text | model.limitedPhrase | model.catDescPart)*
catDesc.localattributes = att.global.attributes, empty
catRef =
  
  ## (category reference) specifies one or more defined categories within some taxonomy or text typology. []
  element catRef { catRef.content, catRef.localattributes }
catRef.content = empty
catRef.localattributes =
  att.global.attributes,
  att.pointing.attributes,
  
  ## identifies the classification scheme within which the set of categories concerned is defined, for example by a taxonomy element, or by some other resource.
  attribute scheme { xsd:anyURI }?,
  empty
category =
  
  ## contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. []
  element category { category.content, category.localattributes }
category.content =
  (catDesc+ | (model.descLike | model.glossLike)*),
  category*
category.localattributes = att.global.attributes, empty
change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [  ]
  element change { change.content, change.localattributes }
change.content = macro.specialPara
change.localattributes =
  att.ascribed.attributes,
  att.datable.attributes,
  att.docStatus.attributes,
  att.global.attributes,
  att.typed.attributes,
  
  ## points to one or more elements that belong to this change.
  attribute target {
    list { xsd:anyURI+ }
  }?,
  empty
classCode =
  
  ## (classification code) contains the classification code used for this text in some standard classification system. []
  element classCode { classCode.content, classCode.localattributes }
classCode.content = macro.phraseSeq.limited
classCode.localattributes =
  att.global.attributes,
  
  ## identifies the classification system in use, as defined by, e.g. a taxonomy element, or some other resource.
  attribute scheme { xsd:anyURI },
  empty
classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [ ]
  element classDecl { classDecl.content, classDecl.localattributes }
classDecl.content = taxonomy+
classDecl.localattributes = att.global.attributes, empty
correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [ ]
  element correction { correction.content, correction.localattributes }
correction.content = model.pLike+
correction.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## indicates the degree of correction applied to the text.
  [ a:defaultValue = "unknown" ]
  attribute status {
    
    ## the text has been thoroughly checked and proofread.
    "high"
    | 
      ## the text has been checked at least once.
      "medium"
    | 
      ## the text has not been checked.
      "low"
    | 
      ## the correction status of the text is unknown.
      "unknown"
  }?,
  
  ## indicates the method adopted to indicate corrections within the text.
  [ a:defaultValue = "silent" ]
  attribute method {
    
    ## corrections have been made silently
    "silent"
    | 
      ## corrections have been represented using markup
      "markup"
  }?,
  empty
correspAction =
  
  ## (correspondence action) contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence. []
  element correspAction {
    correspAction.content, correspAction.localattributes
  }
correspAction.content = model.correspActionPart+ | model.pLike+
correspAction.localattributes =
  att.global.attributes,
  att.sortable.attributes,
  att.typed.attribute.subtype,
  
  ## describes the nature of the action.
  ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
  attribute type {
    
    ## information concerning the sending or dispatch of a message.
    "sent"
    | 
      ## information concerning the receipt of a message.
      "received"
    | 
      ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding.
      "transmitted"
    | 
      ## information concerning the redirection of an unread message.
      "redirected"
    | 
      ## information concerning the forwarding of a message.
      "forwarded"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?,
  empty
correspContext =
  
  ## (correspondence context) provides references to preceding or following correspondence related to this piece of correspondence. []
  element correspContext {
    correspContext.content, correspContext.localattributes
  }
correspContext.content = model.correspContextPart+
correspContext.localattributes = att.global.attributes, empty
correspDesc =
  
  ## (correspondence
  ##     description) contains a description of the actions related to one act of correspondence. []
  element correspDesc {
    correspDesc.content, correspDesc.localattributes
  }
correspDesc.content = model.correspDescPart+ | model.pLike+
correspDesc.localattributes =
  att.declarable.attributes,
  att.canonical.attributes,
  att.global.attributes,
  att.typed.attributes,
  empty
creation =
  
  ## contains information about the creation of a text. [ ]
  element creation { creation.content, creation.localattributes }
creation.content = (text | model.limitedPhrase | listChange)*
creation.localattributes =
  att.global.attributes, att.datable.attributes, empty
distributor =
  
  ## supplies the name of a person or other agency responsible for the distribution of a text. []
  element distributor {
    distributor.content, distributor.localattributes
  }
distributor.content = macro.phraseSeq
distributor.localattributes = att.global.attributes, empty
edition =
  
  ## describes the particularities of one edition of a text. []
  element edition { edition.content, edition.localattributes }
edition.content = macro.phraseSeq
edition.localattributes = att.global.attributes, empty
editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [ ]
  element editionStmt {
    editionStmt.content, editionStmt.localattributes
  }
editionStmt.content = model.pLike+ | (edition, model.respLike*)
editionStmt.localattributes = att.global.attributes, empty
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [  ]
  element editorialDecl {
    editorialDecl.content, editorialDecl.localattributes
  }
editorialDecl.content = (model.pLike | model.editorialDeclPart)+
editorialDecl.localattributes =
  att.global.attributes, att.declarable.attributes, empty
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [ ]
  element encodingDesc {
    encodingDesc.content, encodingDesc.localattributes
  }
encodingDesc.content = (model.encodingDescPart | model.pLike)+
encodingDesc.localattributes = att.global.attributes, empty
extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [   ]
  element extent { extent.content, extent.localattributes }
extent.content = macro.phraseSeq
extent.localattributes = att.global.attributes, empty
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [ ]
  element fileDesc { fileDesc.content, fileDesc.localattributes }
fileDesc.content =
  (titleStmt,
   editionStmt?,
   extent?,
   publicationStmt,
   seriesStmt?,
   notesStmt?),
  sourceDesc+
fileDesc.localattributes = att.global.attributes, empty
funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. []
  element funder { funder.content, funder.localattributes }
funder.content = macro.phraseSeq.limited
funder.localattributes =
  att.global.attributes, att.canonical.attributes, empty
geoDecl =
  
  ## (geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of the geo element elsewhere within the document. []
  element geoDecl { geoDecl.content, geoDecl.localattributes }
geoDecl.content = macro.phraseSeq
geoDecl.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## supplies a commonly used code name for the datum employed.
  ## Suggested values include: 1] WGS84(World Geodetic System) ; 2] MGRS(Military Grid Reference System) ; 3] OSGB36(ordnance survey great britain) ; 4] ED50(European Datum coordinate system) 
  [ a:defaultValue = "WGS84" ]
  attribute datum {
    
    ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to the World Geodetic System.
    "WGS84"
    | 
      ## (Military Grid Reference System) the values supplied are geospatial entity object codes, based on
      "MGRS"
    | 
      ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.
      "OSGB36"
    | 
      ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according to the European Datum coordinate system.
      "ED50"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?,
  empty
handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. []
  element handNote { handNote.content, handNote.localattributes }
handNote.content = macro.specialPara
handNote.localattributes =
  att.global.attributes, att.handFeatures.attributes, empty
hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [ ]
  element hyphenation {
    hyphenation.content, hyphenation.localattributes
  }
hyphenation.content = model.pLike+
hyphenation.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
  [ a:defaultValue = "some" ]
  attribute eol {
    
    ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
    "all"
    | 
      ## end-of-line hyphenation has been retained in some cases.
      "some"
    | 
      ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
      "hard"
    | 
      ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
      "none"
  }?,
  empty
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [  ]
  element idno { idno.content, idno.localattributes }
idno.content = (text | model.gLike | idno)*
idno.localattributes =
  att.global.attributes,
  att.sortable.attributes,
  att.datable.attributes,
  att.typed.attribute.subtype,
  
  ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
  ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
  attribute type {
    
    ## International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the International ISBN Agency.
    "ISBN"
    | 
      ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
      "ISSN"
    | 
      ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
      "DOI"
    | 
      ## Uniform Resource Identifier: a string of characters to uniquely identify a resource which usually contains indication of the means of accessing that resource, the name of its host, and its filepath.
      "URI"
    | 
      ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
      "VIAF"
    | 
      ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
      "ESTC"
    | 
      ## union catalog number in WorldCat representing a resource held by one or more of the member libraries in the global cooperative Online Computer Library Center.
      "OCLC"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?,
  empty
interpretation =
  
  ## describes the scope of any analytic or interpretive information added to the text in addition to the transcription. []
  element interpretation {
    interpretation.content, interpretation.localattributes
  }
interpretation.content = model.pLike+
interpretation.localattributes =
  att.global.attributes, att.declarable.attributes, empty
keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text. []
  element keywords { keywords.content, keywords.localattributes }
keywords.content = term+ | \list
keywords.localattributes =
  att.global.attributes,
  
  ## identifies the controlled vocabulary within which the set of keywords concerned is defined, for example by a taxonomy element, or by some other resource.
  attribute scheme { xsd:anyURI }?,
  empty
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [  ]
  element langUsage { langUsage.content, langUsage.localattributes }
langUsage.content = model.pLike+ | language+
langUsage.localattributes =
  att.global.attributes, att.declarable.attributes, empty
language =
  
  ## characterizes a single language or sublanguage used within a text. []
  element language { language.content, language.localattributes }
language.content = macro.phraseSeq.limited
language.localattributes =
  att.global.attributes,
  
  ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
  attribute ident {
    xsd:language
    | (
       ##
       "")
  },
  
  ## specifies the approximate percentage (by volume) of the text which uses this language.
  attribute usage { xsd:nonNegativeInteger }?,
  empty
licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. []
  element licence { licence.content, licence.localattributes }
licence.content = macro.specialPara
licence.localattributes =
  att.global.attributes,
  att.pointing.attributes,
  att.datable.attributes,
  empty
listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [ ]
  element listChange { listChange.content, listChange.localattributes }
listChange.content = (listChange | change)+
listChange.localattributes =
  att.global.attributes,
  att.sortable.attributes,
  att.typed.attributes,
  
  ## indicates whether the ordering of its child change elements is to be considered significant or not
  [ a:defaultValue = "true" ] attribute ordered { xsd:boolean }?,
  empty
listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. []
  element listPrefixDef {
    listPrefixDef.content, listPrefixDef.localattributes
  }
listPrefixDef.content = (prefixDef | listPrefixDef)+
listPrefixDef.localattributes = att.global.attributes, empty
\namespace =
  
  ## supplies the formal name of the namespace to which the elements documented by its children belong. []
  element namespace { namespace.content, namespace.localattributes }
namespace.content = tagUsage+
namespace.localattributes =
  att.global.attributes,
  
  ## specifies the full formal name of the namespace concerned.
  attribute name { xsd:anyURI },
  empty
normalization =
  
  ## indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [ ]
  element normalization {
    normalization.content, normalization.localattributes
  }
normalization.content = model.pLike+
normalization.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## indicates the method adopted to indicate normalizations within the text.
  [ a:defaultValue = "silent" ]
  attribute method {
    
    ## normalization made silently
    "silent"
    | 
      ## normalization represented using markup
      "markup"
  }?,
  empty
notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [ ]
  element notesStmt { notesStmt.content, notesStmt.localattributes }
notesStmt.content = (model.noteLike | relatedItem)+
notesStmt.localattributes = att.global.attributes, empty
prefixDef =
  
  ## (prefix definition) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. []
  element prefixDef { prefixDef.content, prefixDef.localattributes }
prefixDef.content = model.pLike*
prefixDef.localattributes =
  att.global.attributes,
  att.patternReplacement.attributes,
  
  ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
  attribute ident {
    xsd:token { pattern = "[a-z][a-z0-9\+\.\-]*" }
  },
  empty
principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the creation of an electronic text. []
  element principal { principal.content, principal.localattributes }
principal.content = macro.phraseSeq.limited
principal.localattributes =
  att.global.attributes, att.canonical.attributes, empty
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [ ]
  element profileDesc {
    profileDesc.content, profileDesc.localattributes
  }
profileDesc.content = model.profileDescPart*
profileDesc.localattributes = att.global.attributes, empty
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [  ]
  element projectDesc {
    projectDesc.content, projectDesc.localattributes
  }
projectDesc.content = model.pLike+
projectDesc.localattributes =
  att.global.attributes, att.declarable.attributes, empty
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [ ]
  element publicationStmt {
    publicationStmt.content, publicationStmt.localattributes
  }
publicationStmt.content =
  (model.publicationStmtPart.agency, model.publicationStmtPart.detail*)+
  | model.pLike+
publicationStmt.localattributes = att.global.attributes, empty
punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [ ]
  element punctuation {
    punctuation.content, punctuation.localattributes
  }
punctuation.content = model.pLike*
punctuation.localattributes =
  att.declarable.attributes,
  att.global.attributes,
  
  ## indicates whether or not punctation marks have been retained as content within the text.
  attribute marks {
    
    ## no punctuation marks have been retained
    "none"
    | 
      ## some punctuation marks have been retained
      "some"
    | 
      ## all punctuation marks have been retained
      "all"
  }?,
  
  ## indicates whether punctation marks have been captured inside or outside of an adjacent element.
  attribute placement {
    
    ## punctuation marks are captured inside adjacent elements
    "internal"
    | 
      ## punctuation marks are captured outside adjacent elements
      "external"
  }?,
  empty
quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. [ ]
  element quotation { quotation.content, quotation.localattributes }
quotation.content =
  (model.pLike*)
  >> ns1:pattern [
       id = "quotation-quotationContents-constraint-report-4"
       "\x{a}" ~
       "         "
       ns1:rule [
         context = "tei:quotation"
         "\x{a}" ~
         "            "
         ns1:report [
           test = "not(@marks) and not (tei:p)"
           "\x{a}" ~
           "On "
           ns1:name [ ]
           ", either the @marks attribute should be used, or a paragraph of description provided"
         ]
         "\x{a}" ~
         "         "
       ]
       "\x{a}" ~
       "      "
     ]
quotation.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  
  ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
  attribute marks {
    
    ## no quotation marks have been retained
    "none"
    | 
      ## some quotation marks have been retained
      "some"
    | 
      ## all quotation marks have been retained
      "all"
  }?,
  empty
refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method. [ ]
  element refState { refState.content, refState.localattributes }
refState.content = empty
refState.localattributes =
  att.global.attributes,
  att.milestoneUnit.attributes,
  att.edition.attributes,
  
  ## specifies the fixed length of the reference component.
  attribute length { xsd:nonNegativeInteger }?,
  
  ## (delimiter) supplies a delimiting string following the reference component.
  attribute delim { xsd:string }?,
  empty
refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this text. [  ]
  element refsDecl { refsDecl.content, refsDecl.localattributes }
refsDecl.content = model.pLike+ | cRefPattern+ | refState+
refsDecl.localattributes =
  att.global.attributes, att.declarable.attributes, empty
rendition =
  
  ## supplies information about the rendition or appearance of one or more elements in the source text. []
  element rendition { rendition.content, rendition.localattributes }
rendition.content = macro.limitedContent
rendition.localattributes =
  att.global.attributes,
  att.styleDef.attributes,
  
  ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
  ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
  attribute scope {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?,
  
  ## contains a selector or series of selectors specifying the elements to which the contained style description applies, expressed in the language specified in the scheme attribute.
  attribute selector { xsd:string }?,
  empty
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [ ]
  element revisionDesc {
    revisionDesc.content, revisionDesc.localattributes
  }
revisionDesc.content = \list | listChange | change+
revisionDesc.localattributes =
  att.global.attributes, att.docStatus.attributes, empty
samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the creation of a corpus or collection. [  ]
  element samplingDecl {
    samplingDecl.content, samplingDecl.localattributes
  }
samplingDecl.content = model.pLike+
samplingDecl.localattributes =
  att.global.attributes, att.declarable.attributes, empty
schemaRef =
  
  ## (schema reference) describes or points to a related customization or schema file []
  element schemaRef { schemaRef.content, schemaRef.localattributes }
schemaRef.content = model.descLike?
schemaRef.localattributes =
  att.global.attributes,
  att.typed.attributes,
  att.resourced.attributes,
  
  ## the identifier used for the customization or schema
  attribute key { xsd:NCName }?,
  empty
scriptNote =
  
  ## describes a particular script distinguished within the description of a manuscript or similar resource. []
  element scriptNote { scriptNote.content, scriptNote.localattributes }
scriptNote.content = macro.specialPara
scriptNote.localattributes =
  att.global.attributes, att.handFeatures.attributes, empty
segmentation =
  
  ## describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [ ]
  element segmentation {
    segmentation.content, segmentation.localattributes
  }
segmentation.content = model.pLike+
segmentation.localattributes =
  att.global.attributes, att.declarable.attributes, empty
seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs. [ ]
  element seriesStmt { seriesStmt.content, seriesStmt.localattributes }
seriesStmt.content =
  model.pLike+
  | (title+, (editor | respStmt)*, (idno | biblScope)*)
seriesStmt.localattributes = att.global.attributes, empty
sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. []
  element sourceDesc { sourceDesc.content, sourceDesc.localattributes }
sourceDesc.content =
  model.pLike+
  | (model.biblLike | model.sourceDescPart | model.listLike)+
sourceDesc.localattributes =
  att.global.attributes, att.declarable.attributes, empty
sponsor =
  
  ## specifies the name of a sponsoring organization or institution. []
  element sponsor { sponsor.content, sponsor.localattributes }
sponsor.content = macro.phraseSeq.limited
sponsor.localattributes =
  att.global.attributes, att.canonical.attributes, empty
stdVals =
  
  ## (standard values) specifies the format used when standardized date or number values are supplied. [ ]
  element stdVals { stdVals.content, stdVals.localattributes }
stdVals.content = model.pLike+
stdVals.localattributes =
  att.global.attributes, att.declarable.attributes, empty
styleDefDecl =
  
  ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. []
  element styleDefDecl {
    styleDefDecl.content, styleDefDecl.localattributes
  }
styleDefDecl.content = model.pLike*
styleDefDecl.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  att.styleDef.attributes,
  empty
tagUsage =
  
  ## documents the usage of a specific element within a specified document. []
  element tagUsage { tagUsage.content, tagUsage.localattributes }
tagUsage.content = macro.limitedContent
tagUsage.localattributes =
  att.global.attributes,
  
  ## (generic identifier) specifies the name (generic identifier) of the element indicated by the tag, within the namespace indicated by the parent namespace element.
  attribute gi { xsd:Name },
  
  ## specifies the number of occurrences of this element within the text.
  attribute occurs { xsd:nonNegativeInteger }?,
  
  ## (with unique identifier) specifies the number of occurrences of this element within the text which bear a distinct value for the global xml:id attribute.
  attribute withId { xsd:nonNegativeInteger }?,
  empty
tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document. [ ]
  element tagsDecl { tagsDecl.content, tagsDecl.localattributes }
tagsDecl.content = rendition*, \namespace*
tagsDecl.localattributes =
  att.global.attributes,
  
  ## indicates whether the element types listed exhaustively include all those found within text, or represent only a subset.
  attribute partial { xsd:boolean }?,
  empty
taxonomy =
  
  ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. []
  element taxonomy { taxonomy.content, taxonomy.localattributes }
taxonomy.content =
  ((category | taxonomy)+
   | ((model.glossLike | model.descLike)+, (category | taxonomy)*))
  | (model.biblLike, (category | taxonomy)*)
taxonomy.localattributes = att.global.attributes, empty
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [ ]
  element teiHeader { teiHeader.content, teiHeader.localattributes }
teiHeader.content = fileDesc, model.teiHeaderPart*, revisionDesc?
teiHeader.localattributes = att.global.attributes, empty
textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. []
  element textClass { textClass.content, textClass.localattributes }
textClass.content = (classCode | catRef | keywords)*
textClass.localattributes =
  att.global.attributes, att.declarable.attributes, empty
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [ ]
  element titleStmt { titleStmt.content, titleStmt.localattributes }
titleStmt.content = title+, model.respLike*
titleStmt.localattributes = att.global.attributes, empty
xenoData =
  
  ## (non-TEI metadata) provides a container element into which metadata in non-TEI formats may be placed. []
  element xenoData { xenoData.content, xenoData.localattributes }
xenoData.content = text | anyElement-xenoData
xenoData.localattributes =
  att.global.attributes,
  att.declarable.attributes,
  att.typed.attributes,
  empty
# 3. macros
