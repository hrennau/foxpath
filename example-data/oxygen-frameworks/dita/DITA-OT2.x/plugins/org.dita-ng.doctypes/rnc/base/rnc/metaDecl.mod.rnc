# ============================================================= 
# MODULE:    DITA Metadata - RNC              
# VERSION:   1.2                                                
# DATE:      October 2010                                       
# =============================================================

# Refer to the latest version of this file by the following URI:
# urn:dita-ng:dita:rnc:metaDecl.mod.rnc
# To refer to this specific version, you may use this value:
# urn:dita-ng:dita:rnc:metaDecl.mod.rnc:1.2

# ============================================================= 
# SYSTEM:     Darwin Information Typing Architecture (DITA)     
# PURPOSE:    Define elements and specialization attributes
#             for DITA XML Metadata             
# ORIGINAL CREATION DATE:  
# September 2010                                                
# (C) Copyright Syncro Soft 2010-2011                                
# All Rights Reserved.                                          
# =============================================================

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# Define type patterns
date-format = xsd:string
# Define elements content and attributes

# LONG NAME: Author
author.content = words.cnt*
# 20080128: Removed enumeration for @type for DITA 1.2. Previous values:
# contributor, creator, -dita-use-conref-target
author.attributes =
  univ-atts,
  attribute href { text }?,
  attribute format { text }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute keyref { text }?,
  attribute type { text }?
author.element =
  
  ## The <author> metadata element contains the name of the topic's author.
  ##         Category: Prolog elements
  element author { author.attlist, author.content }
author.attlist &= author.attributes
# LONG NAME: Source
source.content = (words.cnt | ph)*
source.attributes =
  univ-atts,
  attribute href { text }?,
  attribute format { text }?,
  attribute type { text }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute keyref { text }?
source.element =
  
  ## The <source> element contains a reference to a resource from which the
  ##         present topic is derived, either completely or in part. The element can contain a
  ##         description of the resource; the href reference can be a string or a URL that points to it.
  ##         Category: Prolog elements
  element source { source.attlist, source.content }
source.attlist &= source.attributes
# LONG NAME: Publisher
publisher.content = words.cnt*
publisher.attributes =
  attribute href { text }?,
  attribute format { text }?,
  attribute type { text }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute keyref { text }?,
  univ-atts
publisher.element =
  
  ## The <publisher> metadata element contains the name of the person, company,
  ##         or organization responsible for making the content or subject of the topic available.
  ##         Category: Prolog elements
  element publisher { publisher.attlist, publisher.content }
publisher.attlist &= publisher.attributes
# LONG NAME: Copyright
copyright.content = copyryear+, copyrholder
# 20080128: Removed enumeration for @type for DITA 1.2. Previous values:
# primary, secondary, -dita-use-conref-target
copyright.attributes =
  univ-atts,
  attribute type { text }?
copyright.element =
  
  ## The <copyright> element is used for a single copyright entry. It includes
  ##         the copyright years and the copyright holder. Multiple <copyright> statements are
  ##         allowed. 
  ##         Category: Prolog elements
  element copyright { copyright.attlist, copyright.content }
copyright.attlist &= copyright.attributes
# LONG NAME: Copyright Year
copyryear.content = empty
copyryear.attributes =
  attribute year { date-format },
  univ-atts
copyryear.element =
  
  ## The <copyryear> element contains the copyright year as specified by the
  ##         year attribute.
  ##         Category: Prolog elements
  element copyryear { copyryear.attlist, copyryear.content }
copyryear.attlist &= copyryear.attributes
# LONG NAME: Copyright Holder
copyrholder.content = words.cnt*
copyrholder.attributes = univ-atts
copyrholder.element =
  
  ## The copyright holder (<copyrholder>) element names the entity that holds
  ##         legal rights to the material contained in the topic. 
  ##         Category: Prolog elements
  element copyrholder { copyrholder.attlist, copyrholder.content }
copyrholder.attlist &= copyrholder.attributes
# LONG NAME: Critical Dates
critdates.content = created?, revised*
critdates.attributes = univ-atts
critdates.element =
  
  ## The <critdates> element contains the critical dates in a document life
  ##         cycle, such as the creation date and multiple revision dates. 
  ##         Category: Prolog elements
  element critdates { critdates.attlist, critdates.content }
critdates.attlist &= critdates.attributes
# LONG NAME: Created Date
created.content = empty
created.attributes =
  attribute date { date-format },
  attribute golive { date-format }?,
  attribute expiry { date-format }?,
  univ-atts
created.element =
  
  ## The <created> element specifies the document creation date using the date
  ##         attribute. 
  ##         Category: Prolog elements
  element created { created.attlist, created.content }
created.attlist &= created.attributes
# LONG NAME: Revised Date
revised.content = empty
revised.attributes =
  attribute modified { date-format },
  attribute golive { date-format }?,
  attribute expiry { date-format }?,
  univ-atts
revised.element =
  
  ## The <revised> element in the prolog is used to maintain tracking dates
  ##         that are important in a topic development cycle, such as the last modification date, the
  ##         original availability date, and the expiration date. 
  ##         Category: Prolog elements
  element revised { revised.attlist, revised.content }
revised.attlist &= revised.attributes
# LONG NAME: Permissions
permissions.content = empty
# 20080128: Removed enumeration for @type for DITA 1.2. Previous values:
# all, classified, entitled, internal, -dita-use-conref-target
permissions.attributes =
  univ-atts,
  attribute view { text }
permissions.element =
  
  ## The <permissions> prolog element can indicate any preferred controls for
  ##         access to a topic. Topics can be filtered based on the permissions element. This capability
  ##         depends on your output formatting process. 
  ##         Category: Prolog elements
  element permissions { permissions.attlist, permissions.content }
permissions.attlist &= permissions.attributes
# LONG NAME: Category
category.content = words.cnt*
category.attributes = univ-atts
category.element =
  
  ## The <category> element can represent any category by which a topic might
  ##         be classified for retrieval or navigation; for example, the categories could be used to
  ##         group topics in a generated navigation bar. Topics can belong to multiple categories.
  ##         Category: Prolog elements
  element category { category.attlist, category.content }
category.attlist &= category.attributes
# LONG NAME: Metadata
metadata.content =
  audience*,
  category*,
  keywords*,
  prodinfo*,
  othermeta*,
  (data.elements.incl | foreign.unknown.incl)*
metadata.attributes =
  univ-atts,
  attribute mapkeyref { text }?
metadata.element =
  
  ## The <metadata> section of the prolog contains information about a topic
  ##         such as audience and product information. Metadata can be used by computational processes to
  ##         select particular topics or to prepare search indexes or to customize navigation. Elements
  ##         inside of <metadata> provide information about the content and subject of a topic; prolog
  ##         elements outside of <metadata> provide lifecycle information for the content unit (such
  ##         as the author or copyright), which are unrelated to the subject. 
  ##         Category: Prolog elements
  element metadata { metadata.attlist, metadata.content }
metadata.attlist &= metadata.attributes
# LONG NAME: Audience
audience.content = empty
# 20080128: Removed enumerations for DITA 1.2. Previous values:
# @type: administrator, executive, other, purchaser, programmer, 
#        services, user, -dita-use-conref-target
# @job: administering, customizing, evaluating, installing,
#       maintaining, migrating, other, planning, programming,
#       troubleshooting, using, -dita-use-conref-target
# @experiencelevel: expert, general, novice, -dita-use-conref-target
audience.attributes =
  attribute type { text }?,
  attribute othertype { text }?,
  attribute job { text }?,
  attribute otherjob { text }?,
  attribute experiencelevel { text }?,
  attribute name { xsd:NMTOKEN }?,
  univ-atts
audience.element =
  
  ## The <audience> metadata element indicates, through the value of its type
  ##         attribute, the intended audience for a topic. Since a topic can have multiple audiences, you
  ##         can include multiple audience elements. For each audience you specify, you can identify the
  ##         high-level task (job) they are trying to accomplish and the level of experience
  ##         (experiencelevel) expected. The audience element may be used to provide a more detailed
  ##         definition of values used throughout the map or topic on the audience attribute. 
  ##         Category: Prolog elements
  element audience { audience.attlist, audience.content }
audience.attlist &= audience.attributes
# LONG NAME: Keywords
keywords.content = (indexterm | keyword)*
keywords.attributes = univ-atts
keywords.element =
  
  ## The <keywords> element contains a list of key words (using <indexterm>
  ##         or <keyword> markup) that can be used by a search engine. 
  ##         Category: Prolog elements
  element keywords { keywords.attlist, keywords.content }
keywords.attlist &= keywords.attributes
# LONG NAME: Product Information
prodinfo.content =
  prodname,
  vrmlist,
  (brand | component | featnum | platform | prognum | series)*
prodinfo.attributes = univ-atts
prodinfo.element =
  
  ## The <prodinfo> metadata element in the prolog contains information about
  ##         the product or products that are the subject matter of the current topic. The prodinfo
  ##         element may be used to provide a more detailed definition of values used throughout the map
  ##         or topic on the product attribute. 
  ##         Category: Prolog elements
  element prodinfo { prodinfo.attlist, prodinfo.content }
prodinfo.attlist &= prodinfo.attributes
# LONG NAME: Product Name
prodname.content = words.cnt*
prodname.attributes = univ-atts
prodname.element =
  
  ## The <prodname> metadata element contains the name of the product that is
  ##         supported by the information in this topic. 
  ##         Category: Prolog elements
  element prodname { prodname.attlist, prodname.content }
prodname.attlist &= prodname.attributes
# LONG NAME: Version Release and Modification List
vrmlist.content = vrm+
vrmlist.attributes = univ-atts
vrmlist.element =
  
  ## The <vrmlist> element contains a set of <vrm> elements for logging the
  ##         version, release, and modification information for multiple products or versions of products
  ##         to which the topic applies. 
  ##         Category: Prolog elements
  element vrmlist { vrmlist.attlist, vrmlist.content }
vrmlist.attlist &= vrmlist.attributes
# LONG NAME: Version Release and Modification
vrm.content = empty
vrm.attributes =
  attribute version { text },
  attribute release { text }?,
  attribute modification { text }?,
  univ-atts
vrm.element =
  
  ## The vrm empty element contains information about a single product's version,
  ##         modification, and release, to which the current topic applies. 
  ##         Category: Prolog elements
  element vrm { vrm.attlist, vrm.content }
vrm.attlist &= vrm.attributes
# LONG NAME: Brand
brand.content = words.cnt*
brand.attributes = univ-atts
brand.element =
  
  ## The <brand> element indicates the manufacturer or brand associated with
  ##         the product described by the parent <prodinfo> element. 
  ##         Category: Prolog elements
  element brand { brand.attlist, brand.content }
brand.attlist &= brand.attributes
# LONG NAME: Series
series.content = words.cnt*
series.attributes = univ-atts
series.element =
  
  ## The <series> metadata element contains information about the product
  ##         series that the topic supports. 
  ##         Category: Prolog elements
  element series { series.attlist, series.content }
series.attlist &= series.attributes
# LONG NAME: Platform
platform.content = words.cnt*
platform.attributes = univ-atts
platform.element =
  
  ## The <platform> metadata element contains a description of the operating
  ##         system and/or hardware related to the product being described by the <prodinfo> element.
  ##         The platform element may be used to provide a more detailed definition of values used
  ##         throughout the map or topic on the platform attribute. 
  ##         Category: Prolog elements
  element platform { platform.attlist, platform.content }
platform.attlist &= platform.attributes
# LONG NAME: Program Number
prognum.content = words.cnt*
prognum.attributes = univ-atts
prognum.element =
  
  ## The <prognum> metadata element identifies the program number of the
  ##         associated program product. This is typically an order number or a product tracking code
  ##         that could be replaced by an order number when a product completes development. 
  ##         Category: Prolog elements
  element prognum { prognum.attlist, prognum.content }
prognum.attlist &= prognum.attributes
# LONG NAME: Feature Number
featnum.content = words.cnt*
featnum.attributes = univ-atts
featnum.element =
  
  ## The <featnum> element contains the feature number of a product in the
  ##         metadata. 
  ##         Category: Prolog elements
  element featnum { featnum.attlist, featnum.content }
featnum.attlist &= featnum.attributes
# LONG NAME: Component
component.content = words.cnt*
component.attributes = univ-atts
component.element =
  
  ## The <component> element describes the component of the product that this
  ##         topic is concerned with. For example, a product might be made up of many components, each of
  ##         which is installable separately. Components might also be shared by several products so that
  ##         the same component is available for installation with many products. An implementation may
  ##         (but need not) use this identification to check cross-component dependencies when some
  ##         components are installed, but not others. An implementation may also (but need not) use the
  ##         identification make sure that topics are hidden, removed, or flagged in some way when the
  ##         component they describe isn't installed. 
  ##         Category: Prolog elements
  element component { component.attlist, component.content }
component.attlist &= component.attributes
# LONG NAME: Other Metadata

# NOTE: needs to be HTML-equiv, at least
othermeta.content = empty
othermeta.attributes =
  attribute name { text },
  attribute content { text },
  attribute translate-content {
    "no" | "yes" | "-dita-use-conref-target"
  }?,
  univ-atts
othermeta.element =
  
  ## The <othermeta> element can be used to identify properties not otherwise
  ##         included in <metadata> and assign name/content values to those properties. The name
  ##         attribute identifies the property and the content attribute specifies the property's value.
  ##         The values in this attribute are output as HTML metadata elements, and have no defined
  ##         meaning for other possible outputs such as PDF. 
  ##         Category: Prolog elements
  element othermeta { othermeta.attlist, othermeta.content }
othermeta.attlist &= othermeta.attributes
# LONG NAME: Resource Identifier
resourceid.content = empty
resourceid.attributes =
  select-atts,
  localization-atts,
  attribute id { text },
  conref-atts,
  attribute appname { text }?
resourceid.element =
  
  ## The <resourceid> element provides an identifier for applications that
  ##         require them in a particular format, when the normal id attribute of the topic can't be
  ##         used. Each resourceid entry should be unique. It is one of the metadata elements that can be
  ##         included within the prolog of a topic, along with document tracking and product information,
  ##         etc. The element has no content, but takes an id attribute and an appname attribute.
  ##         Category: Prolog elements
  element resourceid { resourceid.attlist, resourceid.content }
resourceid.attlist &= resourceid.attributes
# Specialization attributes. Global attributes and class defaults
author.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/author " ] attribute class { text }?
source.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/source " ] attribute class { text }?
publisher.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/publisher " ] attribute class { text }?
copyright.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/copyright " ] attribute class { text }?
copyryear.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/copyryear " ] attribute class { text }?
copyrholder.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/copyrholder " ] attribute class { text }?
critdates.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/critdates " ] attribute class { text }?
created.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/created " ] attribute class { text }?
revised.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/revised " ] attribute class { text }?
permissions.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/permissions " ] attribute class { text }?
category.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/category " ] attribute class { text }?
metadata.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/metadata " ] attribute class { text }?
audience.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/audience " ] attribute class { text }?
keywords.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/keywords " ] attribute class { text }?
prodinfo.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/prodinfo " ] attribute class { text }?
prodname.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/prodname " ] attribute class { text }?
vrmlist.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/vrmlist " ] attribute class { text }?
vrm.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/vrm " ] attribute class { text }?
brand.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/brand " ] attribute class { text }?
series.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/series " ] attribute class { text }?
platform.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/platform " ] attribute class { text }?
prognum.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/prognum " ] attribute class { text }?
featnum.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/featnum " ] attribute class { text }?
component.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/component " ] attribute class { text }?
othermeta.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/othermeta " ] attribute class { text }?
resourceid.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/resourceid " ] attribute class { text }?
