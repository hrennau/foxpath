# ============================================================= 
# MODULE:    DITA Learning Plan - RNC              
# VERSION:   1.2                                                
# DATE:      November 2010                                       
# =============================================================

# Refer to the latest version of this file by the following URI:
# urn:dita-ng:dita:rnc:learningPlan.mod.rnc
# To refer to this specific version, you may use this value:
# urn:dita-ng:dita:rnc:learningPlan.mod.rnc:1.2

# ============================================================= 
# SYSTEM:     Darwin Information Typing Architecture (DITA)     
# PURPOSE:    Define elements and specialization attributes for 
#             Learning Plan
# ORIGINAL CREATION DATE:  
# September 2010                                                
# (C) Copyright Syncro Soft 2010-2011                                
# All Rights Reserved.                                          
# =============================================================

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# Define the domain values of this module
domains-atts-value |= "(topic learningBase learningPlan)"
learningPlanbody = learningPlanbody.element
# section
lcProject = lcProject.element
lcNeedsAnalysis = lcNeedsAnalysis.element
lcGapAnalysis = lcGapAnalysis.element
lcIntervention = lcIntervention.element
lcTechnical = lcTechnical.element
# fig
lcClient = lcClient.element
lcPlanTitle = lcPlanTitle.element
lcCIN = lcCIN.element
lcModDate = lcModDate.element
lcDelivDate = lcDelivDate.element
lcPlanSubject = lcPlanSubject.element
lcPlanDescrip = lcPlanDescrip.element
lcPlanPrereqs = lcPlanPrereqs.element
lcOrganizational = lcOrganizational.element
lcPlanAudience = lcPlanAudience.element
lcWorkEnv = lcWorkEnv.element
lcTask = lcTask.element
lcGapItem = lcGapItem.element
lcInterventionItem = lcInterventionItem.element
lcLMS = lcLMS.element
lcNoLMS = lcNoLMS.element
lcHandouts = lcHandouts.element
lcClassroom = lcClassroom.element
lcOJT = lcOJT.element
lcConstraints = lcConstraints.element
lcW3C = lcW3C.element
lcPlayers = lcPlayers.element
lcGraphics = lcGraphics.element
lcViewers = lcViewers.element
lcResolution = lcResolution.element
lcFileSizeLimitations = lcFileSizeLimitations.element
lcDownloadTime = lcDownloadTime.element
lcSecurity = lcSecurity.element
# p
lcGeneralDescription = lcGeneralDescription.element
lcGoals = lcGoals.element
lcNeeds = lcNeeds.element
lcValues = lcValues.element
lcOrgConstraints = lcOrgConstraints.element
lcEdLevel = lcEdLevel.element
lcAge = lcAge.element
lcBackground = lcBackground.element
lcSkills = lcSkills.element
lcKnowledge = lcKnowledge.element
lcMotivation = lcMotivation.element
lcSpecChars = lcSpecChars.element
lcWorkEnvDescription = lcWorkEnvDescription.element
lcPlanResources = lcPlanResources.element
lcProcesses = lcProcesses.element
lcTaskItem = lcTaskItem.element
lcAttitude = lcAttitude.element
lcJtaItem = lcJtaItem.element
lcGapItemDelta = lcGapItemDelta.element
lcLearnStrat = lcLearnStrat.element
lcPlanObjective = lcPlanObjective.element
lcAssessment = lcAssessment.element
lcDelivery = lcDelivery.element
# declare the structure and content models

# declare the class derivations
learningPlan.content =
  title,
  titlealts?,
  (shortdesc | abstract)?,
  prolog?,
  learningPlanbody,
  related-links?,
  learningPlan-info-types*
learningPlan.attributes =
  attribute id { xsd:ID },
  conref-atts,
  select-atts,
  localization-atts,
  attribute outputclass { text }?
# doc:A Learning Plan topic describes learning needs and goals, instructional design models, task analyses, learning taxonomies, and other information necessary to the lesson planning process.
learningPlan.element =
  element learningPlan { learningPlan.attlist, learningPlan.content }
learningPlan.attlist &= learningPlan.attributes, arch-atts, domains-atts
learningPlanbody.content =
  lcProject?,
  lcNeedsAnalysis?,
  lcGapAnalysis?,
  lcIntervention?,
  lcTechnical?,
  section*
learningPlanbody.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <learningPlanbody> element is the main body-level element in a learningPlan topic.
learningPlanbody.element =
  element learningPlanbody {
    learningPlanbody.attlist, learningPlanbody.content
  }
learningPlanbody.attlist &= learningPlanbody.attributes
# section
lcProject.content =
  title?,
  lcClient?,
  lcPlanTitle?,
  lcCIN?,
  lcModDate?,
  lcDelivDate?,
  lcPlanSubject?,
  lcPlanDescrip?,
  lcPlanPrereqs?
lcProject.attributes =
  univ-atts,
  attribute spectitle { text }?,
  attribute outputclass { text }?
# doc:The <lcProject> provides learning content project plan description information.
lcProject.element =
  element lcProject { lcProject.attlist, lcProject.content }
lcProject.attlist &= lcProject.attributes
# fig in lcProject
lcClient.content = title?, fig.cnt*
lcClient.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcClient> provides the person or organization sponsoring or requiring the learning event development.
lcClient.element =
  element lcClient { lcClient.attlist, lcClient.content }
lcClient.attlist &= lcClient.attributes
lcPlanTitle.content = title?, fig.cnt*
lcPlanTitle.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanTitle> provides a title for this plan.
lcPlanTitle.element =
  element lcPlanTitle { lcPlanTitle.attlist, lcPlanTitle.content }
lcPlanTitle.attlist &= lcPlanTitle.attributes
lcCIN.content = title?, fig.cnt*
lcCIN.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcCIN> provides an alternate identifier for the project title.
lcCIN.element = element lcCIN { lcCIN.attlist, lcCIN.content }
lcCIN.attlist &= lcCIN.attributes
lcModDate.content = title?, fig.cnt*
lcModDate.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcModDate> provides the project modification date.
lcModDate.element =
  element lcModDate { lcModDate.attlist, lcModDate.content }
lcModDate.attlist &= lcModDate.attributes
lcDelivDate.content = title?, fig.cnt*
lcDelivDate.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcDelivDate> provides the project delivery date.
lcDelivDate.element =
  element lcDelivDate { lcDelivDate.attlist, lcDelivDate.content }
lcDelivDate.attlist &= lcDelivDate.attributes
lcPlanSubject.content = title?, fig.cnt*
lcPlanSubject.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanSubject> provides a complete description of the subject of the planned learning.
lcPlanSubject.element =
  element lcPlanSubject { lcPlanSubject.attlist, lcPlanSubject.content }
lcPlanSubject.attlist &= lcPlanSubject.attributes
lcPlanDescrip.content = title?, fig.cnt*
lcPlanDescrip.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanDescrip> provides a plan description.
lcPlanDescrip.element =
  element lcPlanDescrip { lcPlanDescrip.attlist, lcPlanDescrip.content }
lcPlanDescrip.attlist &= lcPlanDescrip.attributes
lcPlanPrereqs.content = title?, fig.cnt*
lcPlanPrereqs.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:<lcPlanPrereqs> provides the knowledge, skills, abilities, courses and other activities learners must have satisfied to take the instruction.
lcPlanPrereqs.element =
  element lcPlanPrereqs { lcPlanPrereqs.attlist, lcPlanPrereqs.content }
lcPlanPrereqs.attlist &= lcPlanPrereqs.attributes
# section
lcNeedsAnalysis.content =
  title?, lcOrganizational?, lcPlanAudience?, lcWorkEnv?, lcTask*
lcNeedsAnalysis.attributes =
  univ-atts,
  attribute spectitle { text }?,
  attribute outputclass { text }?
# doc:The <lcNeedsAnalysis> describes the training requirement and identifies the need to develop or revise content. These include periodic training gap analyses, changes to operational or maintenance requirements, and changes to equipment or systems.
lcNeedsAnalysis.element =
  element lcNeedsAnalysis {
    lcNeedsAnalysis.attlist, lcNeedsAnalysis.content
  }
lcNeedsAnalysis.attlist &= lcNeedsAnalysis.attributes
# fig in lcNeedsAnalysis
lcOrganizational.content =
  title?,
  lcGeneralDescription?,
  lcGoals?,
  lcNeeds?,
  lcValues?,
  lcOrgConstraints?
lcOrganizational.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcOrganizational> describes an organization's learning requirements.
lcOrganizational.element =
  element lcOrganizational {
    lcOrganizational.attlist, lcOrganizational.content
  }
lcOrganizational.attlist &= lcOrganizational.attributes
lcGeneralDescription.content = para.cnt*
lcGeneralDescription.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcGeneralDescription> provides a space to develop a general description about the organization's training needs.
lcGeneralDescription.element =
  element lcGeneralDescription {
    lcGeneralDescription.attlist, lcGeneralDescription.content
  }
lcGeneralDescription.attlist &= lcGeneralDescription.attributes
lcGoals.content = para.cnt*
lcGoals.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcGoals> provides the outcomes desired by the organization to be addressed by the training effort. These goals may require concurrent efforts outside of training such as technology acquisition, reorganization, and so forth.
lcGoals.element = element lcGoals { lcGoals.attlist, lcGoals.content }
lcGoals.attlist &= lcGoals.attributes
lcNeeds.content = para.cnt*
lcNeeds.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcNeeds> provides the needs behind the outcomes described by the <lcGoals>.
lcNeeds.element = element lcNeeds { lcNeeds.attlist, lcNeeds.content }
lcNeeds.attlist &= lcNeeds.attributes
lcValues.content = para.cnt*
lcValues.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcValues> describes affective components of desired instructional outcomes.
lcValues.element =
  element lcValues { lcValues.attlist, lcValues.content }
lcValues.attlist &= lcValues.attributes
lcOrgConstraints.content = para.cnt*
lcOrgConstraints.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcOrgConstraints> provides organizational aspects that may limit the organization's ability to effectively use the instruction to meet its goals.
lcOrgConstraints.element =
  element lcOrgConstraints {
    lcOrgConstraints.attlist, lcOrgConstraints.content
  }
lcOrgConstraints.attlist &= lcOrgConstraints.attributes
lcPlanAudience.content =
  title?,
  lcGeneralDescription?,
  lcEdLevel?,
  lcAge?,
  lcBackground?,
  lcSkills?,
  lcKnowledge?,
  lcMotivation?,
  lcSpecChars?
lcPlanAudience.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanAudience> describes characteristics of the learners who take the instruction.
lcPlanAudience.element =
  element lcPlanAudience {
    lcPlanAudience.attlist, lcPlanAudience.content
  }
lcPlanAudience.attlist &= lcPlanAudience.attributes
lcEdLevel.content = para.cnt*
lcEdLevel.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcEdLevel> provides the range of learners' education level and the relevancy to the learning plan.
lcEdLevel.element =
  element lcEdLevel { lcEdLevel.attlist, lcEdLevel.content }
lcEdLevel.attlist &= lcEdLevel.attributes
lcAge.content = para.cnt*
lcAge.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcAge> provides the age range of the intended learner audience, for use by curriculum developers and course planners.
lcAge.element = element lcAge { lcAge.attlist, lcAge.content }
lcAge.attlist &= lcAge.attributes
lcBackground.content = para.cnt*
lcBackground.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcBackground> provides the learners' professional background and the relevancy to the learning plan.
lcBackground.element =
  element lcBackground { lcBackground.attlist, lcBackground.content }
lcBackground.attlist &= lcBackground.attributes
lcSkills.content = para.cnt*
lcSkills.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcSkills> describes the learners' current skill set and the relevancy to the learning plan.
lcSkills.element =
  element lcSkills { lcSkills.attlist, lcSkills.content }
lcSkills.attlist &= lcSkills.attributes
lcKnowledge.content = para.cnt*
lcKnowledge.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:<lcKnowledge> provides the learners' current knowledge of the learning topics.
lcKnowledge.element =
  element lcKnowledge { lcKnowledge.attlist, lcKnowledge.content }
lcKnowledge.attlist &= lcKnowledge.attributes
lcMotivation.content = para.cnt*
lcMotivation.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcMotivation> provides the reasons why the learners want and/or need to take the instruction.
lcMotivation.element =
  element lcMotivation { lcMotivation.attlist, lcMotivation.content }
lcMotivation.attlist &= lcMotivation.attributes
lcSpecChars.content = para.cnt*
lcSpecChars.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcSpecChars> provides learner characteristics specific to the population that will influence the design, including learning disabilities, physical handicaps, and so forth.
lcSpecChars.element =
  element lcSpecChars { lcSpecChars.attlist, lcSpecChars.content }
lcSpecChars.attlist &= lcSpecChars.attributes
lcWorkEnv.content =
  title?, lcWorkEnvDescription?, lcPlanResources?, lcProcesses?
lcWorkEnv.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcWorkEnv> describes the working conditions and contexts in which the training will be applied.
lcWorkEnv.element =
  element lcWorkEnv { lcWorkEnv.attlist, lcWorkEnv.content }
lcWorkEnv.attlist &= lcWorkEnv.attributes
lcWorkEnvDescription.content = para.cnt*
lcWorkEnvDescription.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcWorkEnvDescription> provides the general working environment in which the training will be applied.
lcWorkEnvDescription.element =
  element lcWorkEnvDescription {
    lcWorkEnvDescription.attlist, lcWorkEnvDescription.content
  }
lcWorkEnvDescription.attlist &= lcWorkEnvDescription.attributes
lcPlanResources.content = para.cnt*
lcPlanResources.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanResources> describes resource needs.
lcPlanResources.element =
  element lcPlanResources {
    lcPlanResources.attlist, lcPlanResources.content
  }
lcPlanResources.attlist &= lcPlanResources.attributes
lcProcesses.content = para.cnt*
lcProcesses.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcProcesses> describes processes learners routinely follow.
lcProcesses.element =
  element lcProcesses { lcProcesses.attlist, lcProcesses.content }
lcProcesses.attlist &= lcProcesses.attributes
lcTask.content =
  title?, lcTaskItem*, lcKnowledge?, lcSkills?, lcAttitude?
lcTask.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcTask> captures a work item to be performed, as part of the learning plan.
lcTask.element = element lcTask { lcTask.attlist, lcTask.content }
lcTask.attlist &= lcTask.attributes
lcTaskItem.content = para.cnt*
lcTaskItem.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcTaskItem> describes a discreet task to be taught.
lcTaskItem.element =
  element lcTaskItem { lcTaskItem.attlist, lcTaskItem.content }
lcTaskItem.attlist &= lcTaskItem.attributes
lcAttitude.content = para.cnt*
lcAttitude.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcAttitude> describes mental state that influences the choices of personal actions.
lcAttitude.element =
  element lcAttitude { lcAttitude.attlist, lcAttitude.content }
lcAttitude.attlist &= lcAttitude.attributes
# section
lcGapAnalysis.content = title?, lcGapItem*
lcGapAnalysis.attributes =
  univ-atts,
  attribute spectitle { text }?,
  attribute outputclass { text }?
# doc:The <lcGapAnalysis> compares existing learning objectives to current job task analysis.
lcGapAnalysis.element =
  element lcGapAnalysis { lcGapAnalysis.attlist, lcGapAnalysis.content }
lcGapAnalysis.attlist &= lcGapAnalysis.attributes
# fig in lcGapAnalysis
lcGapItem.content =
  title?, lcPlanObjective?, lcJtaItem?, lcGapItemDelta?
lcGapItem.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcGapItem> describes gaps between existing training objectives and related job-task-analysis content.
lcGapItem.element =
  element lcGapItem { lcGapItem.attlist, lcGapItem.content }
lcGapItem.attlist &= lcGapItem.attributes
lcPlanObjective.content = para.cnt*
lcPlanObjective.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlanObjective> describes the objective to be addressed by a gap analysis or intervention.
lcPlanObjective.element =
  element lcPlanObjective {
    lcPlanObjective.attlist, lcPlanObjective.content
  }
lcPlanObjective.attlist &= lcPlanObjective.attributes
lcJtaItem.content = para.cnt*
lcJtaItem.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcJtaItem> provides description of job task analysis (JTA) as related to a particular learning objective.
lcJtaItem.element =
  element lcJtaItem { lcJtaItem.attlist, lcJtaItem.content }
lcJtaItem.attlist &= lcJtaItem.attributes
lcGapItemDelta.content = para.cnt*
lcGapItemDelta.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcGapItemDelta> describes the gap between the learning objective and the task analysis.
lcGapItemDelta.element =
  element lcGapItemDelta {
    lcGapItemDelta.attlist, lcGapItemDelta.content
  }
lcGapItemDelta.attlist &= lcGapItemDelta.attributes
# section
lcIntervention.content = title?, lcInterventionItem*
lcIntervention.attributes =
  univ-atts,
  attribute spectitle { text }?,
  attribute outputclass { text }?
# doc:The <lcIntervention> describes the approach and strategies to building the learning materials, based on the needs analysis.
lcIntervention.element =
  element lcIntervention {
    lcIntervention.attlist, lcIntervention.content
  }
lcIntervention.attlist &= lcIntervention.attributes
# fig in lcIntervention
lcInterventionItem.content =
  title?, lcLearnStrat?, lcPlanObjective?, lcAssessment?, lcDelivery?
lcInterventionItem.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcInterventionItem> describes how learning content is built, based on a systems approach to analyzing, designing, developing, implementing, and evaluating any instructional experience.
lcInterventionItem.element =
  element lcInterventionItem {
    lcInterventionItem.attlist, lcInterventionItem.content
  }
lcInterventionItem.attlist &= lcInterventionItem.attributes
lcLearnStrat.content = para.cnt*
lcLearnStrat.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcLearnStrat> describes the manner in which the learning content will be instructed. This should be a high level design that applies instructional-design theories and models.
lcLearnStrat.element =
  element lcLearnStrat { lcLearnStrat.attlist, lcLearnStrat.content }
lcLearnStrat.attlist &= lcLearnStrat.attributes
lcAssessment.content = para.cnt*
lcAssessment.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcAssessment> describes assessment plans.
lcAssessment.element =
  element lcAssessment { lcAssessment.attlist, lcAssessment.content }
lcAssessment.attlist &= lcAssessment.attributes
lcDelivery.content = para.cnt*
lcDelivery.attributes =
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcDelivery> describes the delivery method for this learning content.
lcDelivery.element =
  element lcDelivery { lcDelivery.attlist, lcDelivery.content }
lcDelivery.attlist &= lcDelivery.attributes
# section
lcTechnical.content =
  title?,
  lcLMS?,
  lcNoLMS?,
  lcHandouts?,
  lcClassroom?,
  lcOJT?,
  lcConstraints?,
  lcW3C?,
  lcPlayers?,
  lcGraphics?,
  lcViewers?,
  lcResolution?,
  lcFileSizeLimitations?,
  lcDownloadTime?,
  lcSecurity?
lcTechnical.attributes =
  univ-atts,
  attribute spectitle { text }?,
  attribute outputclass { text }?
# doc:The <lcTechnical> describes the technical requirements to the learning content and how those requirements are supported by the instructional design.
lcTechnical.element =
  element lcTechnical { lcTechnical.attlist, lcTechnical.content }
lcTechnical.attlist &= lcTechnical.attributes
# fig in lcTechnical
lcLMS.content = title?, fig.cnt*
lcLMS.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcLMS> provides the LMS name and version number used in the learning event.
lcLMS.element = element lcLMS { lcLMS.attlist, lcLMS.content }
lcLMS.attlist &= lcLMS.attributes
lcNoLMS.content = title?, fig.cnt*
lcNoLMS.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:Use <lcNoLMS> when you plan to deliver the content as a standalone package, without a learning management system (LMS).
lcNoLMS.element = element lcNoLMS { lcNoLMS.attlist, lcNoLMS.content }
lcNoLMS.attlist &= lcNoLMS.attributes
lcHandouts.content = title?, fig.cnt*
lcHandouts.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcHandouts> provides aspects of the course that are provided by the instructor in support of the course learning objectives.
lcHandouts.element =
  element lcHandouts { lcHandouts.attlist, lcHandouts.content }
lcHandouts.attlist &= lcHandouts.attributes
lcClassroom.content = title?, fig.cnt*
lcClassroom.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcClassroom> describes the classroom environment.
lcClassroom.element =
  element lcClassroom { lcClassroom.attlist, lcClassroom.content }
lcClassroom.attlist &= lcClassroom.attributes
lcOJT.content = title?, fig.cnt*
lcOJT.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcOJT> is &#34;the job training&#34; and describes aspects of the course taking place in the work environment.
lcOJT.element = element lcOJT { lcOJT.attlist, lcOJT.content }
lcOJT.attlist &= lcOJT.attributes
lcConstraints.content = title?, fig.cnt*
lcConstraints.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcConstraints> describes the organizational or technical aspects that may limit the organization's ability to effectively use the instruction to meet its goals.
lcConstraints.element =
  element lcConstraints { lcConstraints.attlist, lcConstraints.content }
lcConstraints.attlist &= lcConstraints.attributes
lcW3C.content = title?, fig.cnt*
lcW3C.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcW3C> provides requirements for use of world wide web consortium standards.
lcW3C.element = element lcW3C { lcW3C.attlist, lcW3C.content }
lcW3C.attlist &= lcW3C.attributes
lcPlayers.content = title?, fig.cnt*
lcPlayers.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcPlayers> describes tools and plugins used for time-sequenced display at runtime.
lcPlayers.element =
  element lcPlayers { lcPlayers.attlist, lcPlayers.content }
lcPlayers.attlist &= lcPlayers.attributes
lcGraphics.content = title?, fig.cnt*
lcGraphics.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcGraphics> describes standards and system requirements for displaying graphics and other related content types.
lcGraphics.element =
  element lcGraphics { lcGraphics.attlist, lcGraphics.content }
lcGraphics.attlist &= lcGraphics.attributes
lcViewers.content = title?, fig.cnt*
lcViewers.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcViewers> describes viewers used for time-sequenced display at runtime.
lcViewers.element =
  element lcViewers { lcViewers.attlist, lcViewers.content }
lcViewers.attlist &= lcViewers.attributes
lcResolution.content = title?, fig.cnt*
lcResolution.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcResolution> describes the required computer screen resolution for the online instruction.
lcResolution.element =
  element lcResolution { lcResolution.attlist, lcResolution.content }
lcResolution.attlist &= lcResolution.attributes
lcFileSizeLimitations.content = title?, fig.cnt*
lcFileSizeLimitations.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcFileSizeLimitations> describes any file size limitation in the download environment.
lcFileSizeLimitations.element =
  element lcFileSizeLimitations {
    lcFileSizeLimitations.attlist, lcFileSizeLimitations.content
  }
lcFileSizeLimitations.attlist &= lcFileSizeLimitations.attributes
lcDownloadTime.content = title?, fig.cnt*
lcDownloadTime.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcDownloadTime> describes the maximum time allowed for download time in the client's delivery environment.
lcDownloadTime.element =
  element lcDownloadTime {
    lcDownloadTime.attlist, lcDownloadTime.content
  }
lcDownloadTime.attlist &= lcDownloadTime.attributes
lcSecurity.content = title?, fig.cnt*
lcSecurity.attributes =
  display-atts,
  attribute spectitle { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <lcSecurity> describes the security requirements in the delivered instruction.
lcSecurity.element =
  element lcSecurity { lcSecurity.attlist, lcSecurity.content }
lcSecurity.attlist &= lcSecurity.attributes
# specialization attributes
learningPlan.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/topic learningBase/learningBase learningPlan/learningPlan "
  ]
  attribute class { text }?
learningPlanbody.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/body  learningBase/learningBasebody learningPlan/learningPlanbody "
  ]
  attribute class { text }?
lcProject.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section  learningBase/section learningPlan/lcProject "
  ]
  attribute class { text }?
lcNeedsAnalysis.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section  learningBase/section learningPlan/lcNeedsAnalysis "
  ]
  attribute class { text }?
lcGapAnalysis.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section  learningBase/section learningPlan/lcGapAnalysis "
  ]
  attribute class { text }?
lcIntervention.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section  learningBase/section learningPlan/lcIntervention "
  ]
  attribute class { text }?
lcTechnical.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section  learningBase/section learningPlan/lcTechnical "
  ]
  attribute class { text }?
lcClient.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcClient "
  ]
  attribute class { text }?
lcPlanTitle.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlanTitle "
  ]
  attribute class { text }?
lcCIN.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/fig  learningBase/fig learningPlan/lcCIN "
  ]
  attribute class { text }?
lcModDate.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcModDate "
  ]
  attribute class { text }?
lcDelivDate.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcDelivDate "
  ]
  attribute class { text }?
lcPlanSubject.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlanSubject "
  ]
  attribute class { text }?
lcPlanDescrip.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlanDescrip "
  ]
  attribute class { text }?
lcPlanPrereqs.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlanPrereqs "
  ]
  attribute class { text }?
lcOrganizational.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcOrganizational "
  ]
  attribute class { text }?
lcGoals.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/p  learningBase/p learningPlan/lcGoals " ]
  attribute class { text }?
lcNeeds.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/p  learningBase/p learningPlan/lcNeeds " ]
  attribute class { text }?
lcValues.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/p  learningBase/p learningPlan/lcValues "
  ]
  attribute class { text }?
lcOrgConstraints.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcOrgConstraints "
  ]
  attribute class { text }?
lcPlanAudience.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlanAudience "
  ]
  attribute class { text }?
lcGeneralDescription.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcGeneralDescription "
  ]
  attribute class { text }?
lcEdLevel.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/p  learningBase/p learningPlan/lcEdLevel "
  ]
  attribute class { text }?
lcAge.attlist &=
  global-atts,
  [ a:defaultValue = "- topic/p  learningBase/p learningPlan/lcAge " ]
  attribute class { text }?
lcBackground.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcBackground "
  ]
  attribute class { text }?
lcSkills.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/p  learningBase/p learningPlan/lcSkills "
  ]
  attribute class { text }?
lcKnowledge.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcKnowledge "
  ]
  attribute class { text }?
lcMotivation.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcMotivation "
  ]
  attribute class { text }?
lcSpecChars.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcSpecChars "
  ]
  attribute class { text }?
lcWorkEnv.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcWorkEnv "
  ]
  attribute class { text }?
lcWorkEnvDescription.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcWorkEnvDescription "
  ]
  attribute class { text }?
lcPlanResources.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcPlanResources "
  ]
  attribute class { text }?
lcProcesses.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcProcesses "
  ]
  attribute class { text }?
lcTask.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcTask "
  ]
  attribute class { text }?
lcTaskItem.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcTaskItem "
  ]
  attribute class { text }?
lcAttitude.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcAttitude "
  ]
  attribute class { text }?
lcGapItem.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcGapItem "
  ]
  attribute class { text }?
lcPlanObjective.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcPlanObjective "
  ]
  attribute class { text }?
lcJtaItem.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/p  learningBase/p learningPlan/lcJtaItem "
  ]
  attribute class { text }?
lcGapItemDelta.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcGapItemDelta "
  ]
  attribute class { text }?
lcInterventionItem.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcInterventionItem "
  ]
  attribute class { text }?
lcLearnStrat.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcLearnStrat "
  ]
  attribute class { text }?
lcAssessment.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcAssessment "
  ]
  attribute class { text }?
lcDelivery.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/p  learningBase/p learningPlan/lcDelivery "
  ]
  attribute class { text }?
lcLMS.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/fig  learningBase/fig learningPlan/lcLMS "
  ]
  attribute class { text }?
lcNoLMS.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcNoLMS "
  ]
  attribute class { text }?
lcHandouts.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcHandouts "
  ]
  attribute class { text }?
lcClassroom.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcClassroom "
  ]
  attribute class { text }?
lcOJT.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/fig  learningBase/fig learningPlan/lcOJT "
  ]
  attribute class { text }?
lcConstraints.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcConstraints "
  ]
  attribute class { text }?
lcW3C.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/fig  learningBase/fig learningPlan/lcW3C "
  ]
  attribute class { text }?
lcPlayers.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcPlayers "
  ]
  attribute class { text }?
lcGraphics.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcGraphics "
  ]
  attribute class { text }?
lcViewers.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcViewers "
  ]
  attribute class { text }?
lcResolution.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcResolution "
  ]
  attribute class { text }?
lcFileSizeLimitations.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcFileSizeLimitations "
  ]
  attribute class { text }?
lcDownloadTime.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcDownloadTime "
  ]
  attribute class { text }?
lcSecurity.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/fig  learningBase/fig learningPlan/lcSecurity "
  ]
  attribute class { text }?
