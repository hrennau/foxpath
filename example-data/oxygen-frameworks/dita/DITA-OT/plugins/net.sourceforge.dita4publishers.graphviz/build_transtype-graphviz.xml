<?xml version="1.0" encoding="utf-8"?><project name="dita2graphviz" default="dita2graphviz">
  
  <!-- test to see where the plugin is located, plugins or demo -->
  <dirname property="graphviz.dir" file="${ant.file.dita2graphviz}"></dirname>
	
	<!-- Controls debugging within the XSLTs. Set to "true" to turn on debugging: -->
	<property name="debug" value="false"></property>
	
	<property name="graphviz.temp.dir" value="${dita.temp.dir}${file.separator}graphviz_temp"></property>
	<!-- This is the name of the graphviz "dot" program, which is used to generate
	     graph pictures from DOT (.gv) files. If it is not in your system PATH then
	     set this property to the absolute path to the executable.
	  -->
	<property name="graphviz.dot.executable" value="/usr/local/bin/dot"></property>
	<property name="graphvizArgs" value=""></property>

	<target name="dita2graphviz" unless="noMap" depends="build-init,preprocess,graphviz">
  </target>
  
  <target name="graphviz" unless="noMap" depends="dita.map.graphviz"></target>
	  
    
  <target name="dita.map.graphviz.init" description="Init properties for GraphViz">
    <basename property="dita.map.toc.root" file="${dita.input.filename}" suffix=".ditamap"></basename>
    <condition property="args.graphviz.toc" value="${dita.map.toc.root}">
      <not>
        <isset property="args.graphviz.toc"></isset>
      </not>
    </condition>
    <condition property="out.ext" value=".gv">
      <not>
        <isset property="out.ext"></isset>
      </not>
    </condition>
    <condition property="noPlugin">
      <equals arg1="${dita.graphviz.plugin}" arg2="no"></equals>
    </condition>
  	<!-- The output format to use for the generated graph.
  	
  	     Allowed values include "pdf", "svg", "jpg", and 
  	     "gv" (for DOT format normalized by the graphviz
  	     programm.
  	     
  	     The complete set of output types is determined by
  	     how your local graphviz installation is configured.
  	  --> 
  	<condition property="graphviz.output.format" value="pdf">
      <not>
        <isset property="graphviz.output.format"></isset>
      </not>
   </condition>

  	<condition property="graphviz.graph.type" value="navigation-map">
      <not>
        <isset property="graphviz.graph.type"></isset>
      </not>
   </condition>


  </target>
  

  
  <target name="dita.map.graphviz" depends="dita.map.graphviz.init" description="Generate graphviz data files from the input map">
  	
  	<mkdir dir="${graphviz.temp.dir}"></mkdir>
  	<makeurl file="${graphviz.temp.dir}" property="graphviz.xslt.outdir"></makeurl>
  	<makeurl file="${dita.temp.dir}" property="graphviz.xslt.tempdir"></makeurl>
  	
  	<property name="map2graphviz.style" location="${graphviz.dir}/xsl/map2graphviz.xsl"></property>
		<property name="graphviz.result.filename" value="${dita.map.filename.root}.${graphviz.output.format}"></property>

    <xslt processor="trax" basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}fullditamap.list" classpathref="dost.class.path" style="${map2graphviz.style}">
      <param name="debug" expression="${debug}"></param>
     	<param name="tempdir" expression="${graphviz.xslt.tempdir}"></param>
    	<param name="outdir" expression="${output.dir}"></param>
    	<param name="rawPlatformString" expression="${os.name}"></param>
    	<param name="graphType" expression="${graphviz.graph.type}"></param>

    	<!-- Parameters from dita2xhtml and similar transtypes: -->   
      <param name="WORKDIR" expression="${workdir}" if="workdir"></param>
      <param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
    	<param name="OUTPUTDIR" expression="${output.dir}"></param>
      <xmlcatalog refid="dita.catalog"></xmlcatalog>
    </xslt>

  	<!-- Try to run the graphviz "dot" command. Graphviz is a separately-installed
  	     program. It is open source and available for all platforms. See graphviz.org.
  	  -->
	  <exec executable="${graphviz.dot.executable}" resultproperty="resultCode" failonerror="false">
	  	<arg line="-O"></arg><!-- Generate appropriate output filename based on input file(s) -->
	  	<arg line="-T${graphviz.output.format}"></arg>	  	
	  	<arg line="${graphvizArgs}"></arg>
	  	<arg line="${output.dir}/${dita.map.filename.root}.html"></arg>
	  </exec>
		<echo message="After graphviz processing, result code is &apos;${resultCode}&apos;"></echo>

  </target>
  
  <target name="graphviz.copy.graphics" description="Copies graphics from input to the ePub output directory based on the graphic map generated during graphviz generation">
  	<ant antfile="${graphviz.temp.dir}/copy-graphics.xml">
  	</ant>
	</target>
	
  <target name="graphviz-copy-css" description="Copy CSS files">    
    <condition property="user.copycss.yes">
      <isset property="args.css.present"></isset>
    </condition>
    <property name="user.csspath.real" value="${graphviz.temp.dir}/${topics.output.dir}/${user.csspath}"></property>
    <mkdir dir="${user.csspath.real}"></mkdir>    
    <!-- Always copy system default css files -->
    <copy todir="${user.csspath.real}">
      <fileset dir="${dita.plugin.org.dita.xhtml.dir}/resource" includes="*.css"></fileset>
    </copy>    
    <!-- Copy user specify css file when required -->
    <antcall target="graphviz-copy-css-user"></antcall>
  </target>

  <target name="graphviz-copy-css-user" if="user.copycss.yes">
    <copy file="${args.css.real}" todir="${user.csspath.real}"></copy>
  </target>

</project>