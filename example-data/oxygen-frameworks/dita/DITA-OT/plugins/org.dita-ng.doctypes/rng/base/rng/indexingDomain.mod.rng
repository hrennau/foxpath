<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================================= 
     MODULE:    DITA Indexing Domain - RNG              
     VERSION:   1.2                                                
     DATE:      October 2010                                       
     ============================================================= -->
<!--
     Refer to the latest version of this file by the following URI:
     urn:dita-ng:dita:rng:indexingDomain.mod.rng
     To refer to this specific version, you may use this value:
     urn:dita-ng:dita:rng:indexingDomain.mod.rng:1.2
-->
<!-- ============================================================= 
     SYSTEM:     Darwin Information Typing Architecture (DITA)     
     PURPOSE:    Define elements and specialization attributes
                 for Indexing Domain             
     ORIGINAL CREATION DATE:  
     September 2010                                                
     (C) Copyright Syncro Soft 2010-2011                                
     All Rights Reserved.                                          
     ============================================================= -->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
  
  <!-- Define the domain values of this module -->
  <define name="domains-atts-value" combine="choice">
    <value>(topic indexing-d)</value>
  </define>
  
  <!-- Define domain extension patterns -->
  <define name="indexing-d-index-base">
    <choice>
      <ref name="index-see.element"/>
      <ref name="index-see-also.element"/>
      <ref name="index-sort-as.element"/>
    </choice>
  </define>
  <!-- Extend the patterns with the domain contribution -->
  <define name="index-base" combine="choice">
    <ref name="indexing-d-index-base"/>
  </define>
  
  <!-- Define elements content and attributes -->
  
  <!-- LONG NAME: Index See -->
  <define name="index-see.content">
    <zeroOrMore>
      <choice>
        <ref name="words.cnt"/>
        <ref name="indexterm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="index-see.attributes">
    <optional>
      <attribute name="keyref"/>
    </optional>
    <ref name="univ-atts"/>
  </define>
  <define name="index-see.element">
    <element name="index-see">
      <a:documentation>An &lt;index-see> element within an &lt;indexterm> redirects the reader to
        another index entry that the reader should reference instead of the current one. 
        Category: Indexing domain elements</a:documentation>
      <ref name="index-see.attlist"/>
      <ref name="index-see.content"/>
    </element>
  </define>
  <define name="index-see.attlist" combine="interleave">
    <ref name="index-see.attributes"/>
  </define>
  
  <!-- LONG NAME: Index See Also -->
  <define name="index-see-also.content">
    <zeroOrMore>
      <choice>
        <ref name="words.cnt"/>
        <ref name="indexterm"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="index-see-also.attributes">
    <optional>
      <attribute name="keyref"/>
    </optional>
    <ref name="univ-atts"/>
  </define>
  <define name="index-see-also.element">
    <element name="index-see-also">
      <a:documentation>An &lt;index-see-also> element within an &lt;indexterm> redirects the reader
        to another index entry that the reader should reference in addition to the current one.
        Category: Indexing domain elements</a:documentation>
      <ref name="index-see-also.attlist"/>
      <ref name="index-see-also.content"/>
    </element>
  </define>
  <define name="index-see-also.attlist" combine="interleave">
    <ref name="index-see-also.attributes"/>
  </define>
  
  <!-- LONG NAME: Index Sort As -->
  <define name="index-sort-as.content">
    <zeroOrMore>
      <ref name="words.cnt"/>
    </zeroOrMore>
  </define>
  <define name="index-sort-as.attributes">
    <optional>
      <attribute name="keyref"/>
    </optional>
    <ref name="univ-atts"/>
  </define>
  <define name="index-sort-as.element">
    <element name="index-sort-as">
      <a:documentation>The &lt;index-sort-as> element specifies a sort phrase under which an index
        entry would be sorted. 
        Category: Indexing domain elements</a:documentation>
      <ref name="index-sort-as.attlist"/>
      <ref name="index-sort-as.content"/>
    </element>
  </define>
  <define name="index-sort-as.attlist" combine="interleave">
    <ref name="index-sort-as.attributes"/>
  </define>
  
  <!-- Specialization attributes. Global attributes and class defaults -->

  <define name="index-see.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/index-base indexing-d/index-see "/>
    </optional>
  </define>
  <define name="index-see-also.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/index-base indexing-d/index-see-also "/>
    </optional>
  </define>
  <define name="index-sort-as.attlist" combine="interleave">
    <ref name="global-atts"/>
    <optional>
      <attribute name="class" a:defaultValue="+ topic/index-base indexing-d/index-sort-as "/>
    </optional>
  </define>
</grammar>
