# ============================================================= 
# MODULE:    DITA Map RNC              
# VERSION:   1.2                                                
# DATE:      October 2010                                       
# =============================================================

# Refer to the latest version of this file by the following URI:
# urn:dita-ng:dita:rnc:map.mod.rnc
# To refer to this specific version, you may use this value:
# urn:dita-ng:dita:rnc:map.mod.rnc:1.2

# ============================================================= 
# SYSTEM:     Darwin Information Typing Architecture (DITA)     
# PURPOSE:    Relax NG schema to declare the elements and 
#             specialization attributes for the DITA Maps             
# ORIGINAL CREATION DATE:  
# September 2010                                                
# (C) Copyright Syncro Soft 2010-2011                                
# All Rights Reserved.                                          
# =============================================================

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ditaarch = "http://dita.oasis-open.org/architecture/2005/"

# Define the domain values of this module
domains-atts-value |= ""
# Content elements common to map and topic
include "commonElements.mod.rnc"
# MetaData Elements
include "metaDecl.mod.rnc"
# The DITA architecture version attribute
arch-atts =
  [ a:defaultValue = "1.2" ]
  attribute ditaarch:DITAArchVersion { text }?
# Define patterns
topicref = topicref.element
anchor = anchor.element
linktext = linktext.element
navref = navref.element
relcell = relcell.element
relcolspec = relcolspec.element
relheader = relheader.element
relrow = relrow.element
reltable = reltable.element
searchtitle = searchtitle.element
shortdesc = shortdesc.element
topicmeta = topicmeta.element
# COMMON ATTLIST SETS
topicref-atts =
  attribute collection-type {
    "choice"
    | "family"
    | "sequence"
    | "unordered"
    | "-dita-use-conref-target"
  }?,
  attribute type { text }?,
  attribute processing-role {
    "normal" | "resource-only" | "-dita-use-conref-target"
  }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute locktitle { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute format { text }?,
  attribute linking {
    "none"
    | "normal"
    | "sourceonly"
    | "targetonly"
    | "-dita-use-conref-target"
  }?,
  attribute toc { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute print {
    "no" | "printonly" | "yes" | "-dita-use-conref-target"
  }?,
  attribute search { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute chunk { text }?
topicref-atts-no-toc =
  attribute collection-type {
    "choice"
    | "family"
    | "sequence"
    | "unordered"
    | "-dita-use-conref-target"
  }?,
  attribute type { text }?,
  attribute processing-role {
    "normal" | "resource-only" | "-dita-use-conref-target"
  }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute locktitle { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute format { text }?,
  attribute linking {
    "none"
    | "normal"
    | "sourceonly"
    | "targetonly"
    | "-dita-use-conref-target"
  }?,
  [ a:defaultValue = "no" ]
  attribute toc { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute print {
    "no" | "printonly" | "yes" | "-dita-use-conref-target"
  }?,
  attribute search { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute chunk { text }?
topicref-atts-without-format =
  attribute collection-type {
    "choice"
    | "family"
    | "sequence"
    | "unordered"
    | "-dita-use-conref-target"
  }?,
  attribute type { text }?,
  attribute processing-role {
    "normal" | "resource-only" | "-dita-use-conref-target"
  }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute locktitle { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute linking {
    "none"
    | "normal"
    | "sourceonly"
    | "targetonly"
    | "-dita-use-conref-target"
  }?,
  attribute toc { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute print {
    "no" | "printonly" | "yes" | "-dita-use-conref-target"
  }?,
  attribute search { "no" | "yes" | "-dita-use-conref-target" }?,
  attribute chunk { text }?
# Define elements content and attributes

# LONG NAME: Map
map.content =
  title?,
  topicmeta?,
  (anchor | data.elements.incl | navref | reltable | topicref)*
map.attributes =
  attribute title { text }?,
  attribute id { xsd:ID }?,
  conref-atts,
  attribute anchorref { text }?,
  attribute outputclass { text }?,
  localization-atts,
  topicref-atts,
  select-atts

## The <map> element is used to define a map which describes the relationships
##       among a set of resources, such as DITA topics. Maps consist of references to topics and other
##       resources organized into hierarchies, groups, and tables. Maps provide a way to express these
##       relationships in a single common format that can be used for different outputs. 
##       Category: Map elements
map.element = element map { map.attlist, map.content }
map.attlist &= map.attributes, arch-atts, domains-atts
# LONG NAME: Navigation Reference
navref.content = empty
navref.attributes =
  univ-atts,
  attribute keyref { text }?,
  attribute mapref { text }?,
  attribute outputclass { text }?

##  The <navref> represents a pointer to another map which should be preserved
##       as a transcluding link rather than resolved. Output formats that support such linking will
##       integrate the target when displaying the referencing map to an end user. 
##       Category: Map elements 
navref.element = element navref { navref.attlist, navref.content }
navref.attlist &= navref.attributes
# LONG NAME: Topic Reference
topicref.content =
  topicmeta?, (anchor | data.elements.incl | navref | topicref)*
topicref.attributes =
  attribute navtitle { text }?,
  attribute href { text }?,
  attribute keyref { text }?,
  attribute keys { text }?,
  attribute query { text }?,
  attribute copy-to { text }?,
  attribute outputclass { text }?,
  topicref-atts,
  univ-atts

##  The <topicref> element identifies a topic (such as a concept, task, or
##       reference) or other resource. A <topicref> can contain other<topicref> elements,
##       allowing you to express navigation or table-of-contents hierarchies, as well as implying
##       relationships between the containing <topicref> and its children. You can set the
##       collection-type of a container <topicref> to determine how its children are related to each
##       other. You can also express relationships among <topicref>s using group and table
##       structures (using <topicgroup> and <reltable>). Relationships end up expressed as links
##       in the output (with each participant in a relationship having links to the other participants
##       by default). 
##       Category: Map elements 
topicref.element =
  element topicref { topicref.attlist, topicref.content }
topicref.attlist &= topicref.attributes
# LONG NAME: Anchor
anchor.content = empty
anchor.attributes =
  attribute outputclass { text }?,
  localization-atts,
  attribute id { xsd:ID },
  conref-atts,
  select-atts

## The <anchor> element is used for runtime integration of navigation. It
##       provides an integration point that another map can point to in order to insert its navigation
##       into the current navigation tree. For those familiar with Eclipse help systems, this serves
##       the same purpose as the <anchor> element in that system. It may not be supported for all
##       output formats. 
##       Category: Map elements
anchor.element = element anchor { anchor.attlist, anchor.content }
anchor.attlist &= anchor.attributes
# LONG NAME: Relationship Table
reltable.content = title?, topicmeta?, relheader?, relrow+
reltable.attributes =
  attribute title { text }?,
  attribute outputclass { text }?,
  topicref-atts-no-toc,
  univ-atts

## The relationship table (<reltable>) defines relationships between topics,
##       based on the familiar table model of rows (<relrow>), columns (<relheader>), and cells
##       (<relcell>). The <relcell> elements can contain <topicref> elements, which are then
##       related to other <topicref> elements in the same row (although not necessarily in the same
##       cell). By default, the contents of a <reltable> element are not output for navigation or
##       TOC purposes, and are used only to define relationships that can be expressed as
##       topic-to-topic links. 
##       Category: Map elements
reltable.element =
  element reltable { reltable.attlist, reltable.content }
reltable.attlist &= reltable.attributes
# LONG NAME: Relationship Header
relheader.content = relcolspec+
relheader.attributes = univ-atts

## The <relheader> element is a row of column definitions (<relcolspec>
##       elements) in a relationship table. Each table can have only one set of column definitions.
##       Category: Map elements
relheader.element =
  element relheader { relheader.attlist, relheader.content }
relheader.attlist &= relheader.attributes
# LONG NAME: Relationship Column Specification
relcolspec.content = title?, topicmeta?, topicref*
relcolspec.attributes =
  attribute outputclass { text }?,
  topicref-atts,
  univ-atts

## A column definition in the relationship table. You can use <relcolspec>
##       column definitions to set defaults for the attributes of <topicref> elements in the column.
##       For example, you can set type="concept" to treat all untyped <topicref> elements in the
##       column as concepts. 
##       Category: Map elements
relcolspec.element =
  element relcolspec { relcolspec.attlist, relcolspec.content }
relcolspec.attlist &= relcolspec.attributes
# LONG NAME: Relationship Table Row
relrow.content = relcell*
relrow.attributes =
  attribute outputclass { text }?,
  univ-atts

##  A <relrow> is a row in the relationship table. This creates a relationship
##       between the cells in the row, which will end up expressed as links among the <topicref>
##       elements in the cells. 
##       Category: Map elements 
relrow.element = element relrow { relrow.attlist, relrow.content }
relrow.attlist &= relrow.attributes
# LONG NAME: Relationship Table Cell
relcell.content = (topicref | data.elements.incl)*
relcell.attributes =
  attribute outputclass { text }?,
  topicref-atts,
  univ-atts

## A <relcell> element is a cell in the relationship table. The <topicref>
##       elements it contains will be related to topicrefs in other cells of the same row. By default,
##       topicrefs in the same cell are not related to each other, unless you change the relcell's
##       collection-type attribute to indicate that they are related. 
##       Category: Map elements
relcell.element = element relcell { relcell.attlist, relcell.content }
relcell.attlist &= relcell.attributes
# LONG NAME: Topic Metadata
topicmeta.content =
  navtitle?,
  linktext?,
  searchtitle?,
  shortdesc?,
  author*,
  source?,
  publisher?,
  copyright*,
  critdates?,
  permissions?,
  metadata*,
  audience*,
  category*,
  keywords*,
  prodinfo*,
  othermeta*,
  resourceid*,
  (data.elements.incl | foreign.unknown.incl)*
topicmeta.attributes =
  attribute lockmeta { "no" | "yes" | "-dita-use-conref-target" }?,
  univ-atts

## The <topicmeta> element defines the metadata that applies to a topic when it
##       appears in a map, and to the other topics in the map that are contained by the same element
##       that contains the <topicmeta> element. When creating links, it can also be used to override
##       the title and short description of the topic. In addition, it can be used to add index entries
##       to referenced content using the <keywords> element. 
##       Category: Map elements
topicmeta.element =
  element topicmeta { topicmeta.attlist, topicmeta.content }
topicmeta.attlist &= topicmeta.attributes
# LONG NAME: Link Text
linktext.content = (words.cnt | ph)*
linktext.attributes =
  attribute outputclass { text }?,
  univ-atts

## The <linktext> element provides the literal label or line of text for a
##       link. In most cases, the text of a link can be resolved during processing by cross reference
##       with the target resource. Use the <linktext> element only when the target cannot be
##       reached, such as when it is a peer or external link, or the target is local but not in DITA
##       format. When used inside a topic, it will be used as the text for the specified link; when
##       used within a map, it will be used as the text for generated links that point to the specified
##       topic. 
##       Category: Related Links elements
linktext.element =
  element linktext { linktext.attlist, linktext.content }
linktext.attlist &= linktext.attributes
# LONG NAME: Search Title
searchtitle.content = words.cnt*
searchtitle.attributes =
  attribute outputclass { text }?,
  univ-atts

## When your DITA topic is transformed to XHTML, the <searchtitle> element is
##       used to create a title element at the top of the resulting HTML file. This title is normally
##       used in search result summaries by some search engines, such as that in Eclipse
##       (http://eclipse.org); if not set, the XHTML's title element defaults to the source topic's
##       title content (which may not be as well optimized for search summaries). 
##       Category: Topic elements
searchtitle.element =
  element searchtitle { searchtitle.attlist, searchtitle.content }
searchtitle.attlist &= searchtitle.attributes
# Specialization attributes. Global attributes and class defaults
map.attlist &=
  global-atts,
  [ a:defaultValue = "- map/map " ] attribute class { text }?
navref.attlist &=
  global-atts,
  [ a:defaultValue = "- map/navref " ] attribute class { text }?
topicref.attlist &=
  global-atts,
  [ a:defaultValue = "- map/topicref " ] attribute class { text }?
anchor.attlist &=
  global-atts,
  [ a:defaultValue = "- map/anchor " ] attribute class { text }?
reltable.attlist &=
  global-atts,
  [ a:defaultValue = "- map/reltable " ] attribute class { text }?
relheader.attlist &=
  global-atts,
  [ a:defaultValue = "- map/relheader " ] attribute class { text }?
relcolspec.attlist &=
  global-atts,
  [ a:defaultValue = "- map/relcolspec " ] attribute class { text }?
relrow.attlist &=
  global-atts,
  [ a:defaultValue = "- map/relrow " ] attribute class { text }?
relcell.attlist &=
  global-atts,
  [ a:defaultValue = "- map/relcell " ] attribute class { text }?
topicmeta.attlist &=
  global-atts,
  [ a:defaultValue = "- map/topicmeta " ] attribute class { text }?
linktext.attlist &=
  global-atts,
  [ a:defaultValue = "- map/linktext " ] attribute class { text }?
searchtitle.attlist &=
  global-atts,
  [ a:defaultValue = "- map/searchtitle " ] attribute class { text }?
# Shortdesc in topic uses topic/shortdesc so this one must be 
# included, even though the element is common.
shortdesc.attlist &=
  global-atts,
  [ a:defaultValue = "- map/shortdesc " ] attribute class { text }?
