# ============================================================= 
# MODULE:    DITA XNAL Domain - RNC              
# VERSION:   1.2                                                
# DATE:      November 2010                                       
# =============================================================

# Refer to the latest version of this file by the following URI:
# urn:dita-ng:dita:rnc:xnalDomain.mod.rnc
# To refer to this specific version, you may use this value:
# urn:dita-ng:dita:rnc:xnalDomain.mod.rnc:1.2

# ============================================================= 
# SYSTEM:     Darwin Information Typing Architecture (DITA)     
# PURPOSE:    Define elements and specialization atttributed for 
#             the XNAL Domain
# ORIGINAL CREATION DATE:  
# September 2010                                                
# (C) Copyright Syncro Soft 2010-2011                                
# All Rights Reserved.                                          
# =============================================================

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# Define the domain values of this module
domains-atts-value |= "(topic xnal-d)"
xnal-d-author = authorinformation.element
author |= xnal-d-author
addressdetails = addressdetails.element
administrativearea = administrativearea.element
contactnumber = contactnumber.element
contactnumbers = contactnumbers.element
country = country.element
emailaddress = emailaddress.element
emailaddresses = emailaddresses.element
firstname = firstname.element
generationidentifier = generationidentifier.element
honorific = honorific.element
lastname = lastname.element
locality = locality.element
localityname = localityname.element
middlename = middlename.element
namedetails = namedetails.element
organizationinfo = organizationinfo.element
organizationname = organizationname.element
organizationnamedetails = organizationnamedetails.element
otherinfo = otherinfo.element
personinfo = personinfo.element
personname = personname.element
postalcode = postalcode.element
thoroughfare = thoroughfare.element
url = url.element
urls = urls.element
# =============================================================

# ELEMENT DECLARATIONS

# =============================================================

# LONG NAME: Author Information
authorinformation.content = (organizationinfo | personinfo)*
# 20080128: Removed enumeration for @type for DITA 1.2. Previous values:
# creator, contributor, -dita-use-conref-target
authorinformation.attributes =
  univ-atts,
  attribute href { text }?,
  attribute format { text }?,
  attribute type { text }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute keyref { text }?
# doc:The <authorinformation> element contains detailed information about the author or authoring organization.
# Category: xNAL elements
authorinformation.element =
  element authorinformation {
    authorinformation.attlist, authorinformation.content
  }
authorinformation.attlist &= authorinformation.attributes
# LONG NAME: Name Details
namedetails.content = (organizationnamedetails | personname)*
namedetails.attributes = data-element-atts
# doc:The <namedetails> element contains information about the name of the author or the authoring organization.
# Category: xNAL elements
namedetails.element =
  element namedetails { namedetails.attlist, namedetails.content }
namedetails.attlist &= namedetails.attributes
# LONG NAME: Organization Details
organizationnamedetails.content = organizationname?, otherinfo*
organizationnamedetails.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <organizationnamedetails> element contains information about the name of an authoring organization.
# Category: xNAL elements
organizationnamedetails.element =
  element organizationnamedetails {
    organizationnamedetails.attlist, organizationnamedetails.content
  }
organizationnamedetails.attlist &= organizationnamedetails.attributes
# LONG NAME: Organization Name
organizationname.content = ph.cnt*
organizationname.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <organizationname> element contains name information about the authoring organization.
# Category: xNAL elements
organizationname.element =
  element organizationname {
    organizationname.attlist, organizationname.content
  }
organizationname.attlist &= organizationname.attributes
# LONG NAME: Person Name
personname.content =
  honorific?,
  firstname*,
  middlename*,
  lastname*,
  generationidentifier?,
  otherinfo*
personname.attributes = data-element-atts
# doc:The <personname> element contains name information about the author.
# Category: xNAL elements
personname.element =
  element personname { personname.attlist, personname.content }
personname.attlist &= personname.attributes
# LONG NAME: Honorific
honorific.content = (text | keyword)*
honorific.attributes = data-element-atts
# doc:The <honorific> element contains the person's title, such as: Dr., Mr., Ms., HRH.. or Grand Exalted Wizard.
# Category: xNAL elements
honorific.element =
  element honorific { honorific.attlist, honorific.content }
honorific.attlist &= honorific.attributes
# LONG NAME: First Name
firstname.content = (text | keyword)*
firstname.attributes = data-element-atts
# doc:The <firstname> element contains the person's first name.
# Category: xNAL elements
firstname.element =
  element firstname { firstname.attlist, firstname.content }
firstname.attlist &= firstname.attributes
# LONG NAME: Middle Name
middlename.content = (text | keyword)*
middlename.attributes = data-element-atts
# doc:The <middlename> element contains the person's middle name or initial.
# Category: xNAL elements
middlename.element =
  element middlename { middlename.attlist, middlename.content }
middlename.attlist &= middlename.attributes
# LONG NAME: Last Name
lastname.content = (text | keyword)*
lastname.attributes = data-element-atts
# doc:The <lastname> element contains the person's last name.
# Category: xNAL elements
lastname.element =
  element lastname { lastname.attlist, lastname.content }
lastname.attlist &= lastname.attributes
# LONG NAME: Generation Identifier
generationidentifier.content = (text | keyword)*
generationidentifier.attributes = data-element-atts
# doc:The <generationidentifier> element contains information about the person's generation, such as: Jr, III, or VIII.
# Category: xNAL elements
generationidentifier.element =
  element generationidentifier {
    generationidentifier.attlist, generationidentifier.content
  }
generationidentifier.attlist &= generationidentifier.attributes
# LONG NAME: Other Information
otherinfo.content = words.cnt*
otherinfo.attributes = data-element-atts
# doc:The <otherinfo> element contains other name information about the author or authoring organization.
# Category: xNAL elements
otherinfo.element =
  element otherinfo { otherinfo.attlist, otherinfo.content }
otherinfo.attlist &= otherinfo.attributes
# LONG NAME: Address Details
addressdetails.content =
  (words.cnt | administrativearea | country | locality | thoroughfare)*
addressdetails.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <addressdetails> element contains information about the address of the author or authoring group.
# Category: xNAL elements
addressdetails.element =
  element addressdetails {
    addressdetails.attlist, addressdetails.content
  }
addressdetails.attlist &= addressdetails.attributes
# LONG NAME: Locality
locality.content = (words.cnt | localityname | postalcode)*
locality.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <locality> element contains information about the city and postal or ZIP code. It can contain the information directly, or by acting as a wrapper for <localityname> and <postalcode>.
# Category: xNAL elements
locality.element =
  element locality { locality.attlist, locality.content }
locality.attlist &= locality.attributes
# LONG NAME: Locality Name
localityname.content = words.cnt*
localityname.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <localityname> element contains the name of the locality or city.
# Category: xNAL elements
localityname.element =
  element localityname { localityname.attlist, localityname.content }
localityname.attlist &= localityname.attributes
# LONG NAME: Administrative Area
administrativearea.content = words.cnt*
administrativearea.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <administrativearea> element contains information about a county, state, or province.
# Category: xNAL elements
administrativearea.element =
  element administrativearea {
    administrativearea.attlist, administrativearea.content
  }
administrativearea.attlist &= administrativearea.attributes
# LONG NAME: Thoroughfare
thoroughfare.content = words.cnt*
thoroughfare.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <thoroughfare> element contains information about the thoroughfare - for example, the street, avenue, or boulevard - on which an address is located.
# Category: xNAL elements
thoroughfare.element =
  element thoroughfare { thoroughfare.attlist, thoroughfare.content }
thoroughfare.attlist &= thoroughfare.attributes
# LONG NAME: Postal Code
postalcode.content = (text | keyword)*
postalcode.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <postalcode> element contains information about the postal code or the ZIP code.
# Category: xNAL elements
postalcode.element =
  element postalcode { postalcode.attlist, postalcode.content }
postalcode.attlist &= postalcode.attributes
# LONG NAME: Country
country.content = (text | keyword)*
country.attributes =
  attribute keyref { text }?,
  univ-atts,
  attribute outputclass { text }?
# doc:The <country> element contains the name of a country.
# Category: xNAL elements
country.element = element country { country.attlist, country.content }
country.attlist &= country.attributes
# LONG NAME: Person Information
personinfo.content =
  namedetails?, addressdetails?, contactnumbers?, emailaddresses?
personinfo.attributes = data-element-atts
# doc:The <personinfo> element is a wrapper containing all relevant data about a person, including name, address, and contact information.
# Category: xNAL elements
personinfo.element =
  element personinfo { personinfo.attlist, personinfo.content }
personinfo.attlist &= personinfo.attributes
# LONG NAME: Organization Information
organizationinfo.content =
  namedetails?, addressdetails?, contactnumbers?, emailaddresses?, urls?
organizationinfo.attributes = data-element-atts
# doc:The <organizationinfo> element contains detailed information about an authoring organization.
# Category: xNAL elements
organizationinfo.element =
  element organizationinfo {
    organizationinfo.attlist, organizationinfo.content
  }
organizationinfo.attlist &= organizationinfo.attributes
# LONG NAME: Contact Numbers
contactnumbers.content = contactnumber*
contactnumbers.attributes = data-element-atts
# doc:The <contactnumbers> element contains a list of telephone and fax numbers.
# Category: xNAL elements
contactnumbers.element =
  element contactnumbers {
    contactnumbers.attlist, contactnumbers.content
  }
contactnumbers.attlist &= contactnumbers.attributes
# LONG NAME: Contact Number

# Note: set the type of number using @type
contactnumber.content = (text | keyword)*
contactnumber.attributes = data-element-atts
# doc:A <contactnumber> element contains a telephone number.
# Category: xNAL elements
contactnumber.element =
  element contactnumber { contactnumber.attlist, contactnumber.content }
contactnumber.attlist &= contactnumber.attributes
# LONG NAME: Email Addresses
emailaddresses.content = emailaddress*
emailaddresses.attributes = data-element-atts
# doc:The <emailaddress> element contains a list of e-mail addresses.
# Category: xNAL elements
emailaddresses.element =
  element emailaddresses {
    emailaddresses.attlist, emailaddresses.content
  }
emailaddresses.attlist &= emailaddresses.attributes
# LONG NAME: Email Address
emailaddress.content = words.cnt*
emailaddress.attributes = data-element-atts
# doc:The <emailaddress> element contains an e-mail address.
# Category: xNAL elements
emailaddress.element =
  element emailaddress { emailaddress.attlist, emailaddress.content }
emailaddress.attlist &= emailaddress.attributes
# LONG NAME: URLs
urls.content = url*
urls.attributes = data-element-atts
# doc:The <urls> element contains a list of Uniform Resource Locators (URLs).
# Category: xNAL elements
urls.element = element urls { urls.attlist, urls.content }
urls.attlist &= urls.attributes
# LONG NAME: URL
url.content = words.cnt*
url.attributes = data-element-atts
# doc:The <url> element contains a Uniform Resource Locator (URL).
# Category: xNAL elements
url.element = element url { url.attlist, url.content }
url.attlist &= url.attributes
# =============================================================

# SPECIALIZATION ATTRIBUTE DECLARATIONS

# =============================================================
addressdetails.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/addressdetails " ]
  attribute class { text }?
administrativearea.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/administrativearea " ]
  attribute class { text }?
authorinformation.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/author xnal-d/authorinformation " ]
  attribute class { text }?
contactnumber.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/contactnumber " ]
  attribute class { text }?
contactnumbers.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/contactnumbers " ]
  attribute class { text }?
country.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/country " ]
  attribute class { text }?
emailaddress.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/emailaddress " ]
  attribute class { text }?
emailaddresses.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/emailaddresses " ]
  attribute class { text }?
firstname.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/firstname " ]
  attribute class { text }?
generationidentifier.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/generationidentifier " ]
  attribute class { text }?
honorific.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/honorific " ]
  attribute class { text }?
lastname.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/lastname " ]
  attribute class { text }?
locality.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/locality " ]
  attribute class { text }?
localityname.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/localityname " ]
  attribute class { text }?
middlename.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/middlename " ]
  attribute class { text }?
namedetails.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/namedetails " ]
  attribute class { text }?
organizationinfo.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/organizationinfo " ]
  attribute class { text }?
organizationname.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/organizationname " ]
  attribute class { text }?
organizationnamedetails.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/organizationnamedetails " ]
  attribute class { text }?
otherinfo.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/otherinfo " ]
  attribute class { text }?
personinfo.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/personinfo " ]
  attribute class { text }?
personname.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/personname " ]
  attribute class { text }?
postalcode.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/postalcode " ]
  attribute class { text }?
thoroughfare.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/ph xnal-d/thoroughfare " ]
  attribute class { text }?
url.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/url " ]
  attribute class { text }?
urls.attlist &=
  global-atts,
  [ a:defaultValue = "+ topic/data xnal-d/urls " ]
  attribute class { text }?
# ================== End DITA XNAL Domain  ===================
