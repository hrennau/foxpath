# ============================================================= 
# MODULE:    DITA Glossary - RNC              
# VERSION:   1.2                                                
# DATE:      November 2010                                       
# =============================================================

# Refer to the latest version of this file by the following URI:
# urn:dita-ng:dita:rnc:glossentry.mod.rnc
# To refer to this specific version, you may use this value:
# urn:dita-ng:dita:rnc:glossentry.mod.rnc:1.2

# ============================================================= 
# SYSTEM:     Darwin Information Typing Architecture (DITA)     
# PURPOSE:    Define elements and specialization attributes
#             for Glossary topics            
# ORIGINAL CREATION DATE:  
# September 2010                                                
# (C) Copyright Syncro Soft 2010-2011                                
# All Rights Reserved.                                          
# =============================================================

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# Define the domain values of this module
domains-atts-value |= "(topic concept glossentry)"
# Define patterns
glossAbbreviation = glossAbbreviation.element
glossAcronym = glossAcronym.element
glossAlt = glossAlt.element
glossAlternateFor = glossAlternateFor.element
glossBody = glossBody.element
glossdef = glossdef.element
glossPartOfSpeech = glossPartOfSpeech.element
glossProperty = glossProperty.element
glossScopeNote = glossScopeNote.element
glossShortForm = glossShortForm.element
glossStatus = glossStatus.element
glossSurfaceForm = glossSurfaceForm.element
glossSymbol = glossSymbol.element
glossSynonym = glossSynonym.element
glossterm = glossterm.element
glossUsage = glossUsage.element
# Define elements content and attributes

# LONG NAME: Glossary Entry
glossentry.content =
  glossterm,
  glossdef?,
  prolog?,
  glossBody?,
  related-links?,
  glossentry-info-types*
glossentry.attributes =
  attribute id { xsd:ID },
  conref-atts,
  select-atts,
  localization-atts,
  attribute outputclass { text }?
glossentry.element =
  
  ## The <glossentry> element defines a single sense of a glossary term. The
  ##         expected book processing is to sort and group the glossary entries based on the localized
  ##         term so a back-of-the-book glossary can contain a collated list of terms with the
  ##         definitions of the senses of the terms indented under the terms. The glossary can have a
  ##         different organization in different languages depending on the translation of the terms. One
  ##         possible online processing is to associate a hotspot for mentions of terms in <term>
  ##         elements and display the definition on hover or click. Glossary entries for different term
  ##         senses can be reused independently of one another. 
  ##         Category: Glossentry elements
  element glossentry { glossentry.attlist, glossentry.content }
glossentry.attlist &= glossentry.attributes, arch-atts, domains-atts
# LONG NAME: Glossary Term
glossterm.content = title.cnt*
glossterm.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossterm.element =
  
  ## The <glossterm> element specifies the preferred term associated with a
  ##         definition of a sense. If the same term has multiple senses, create a separate
  ##         <glossentry> topic for each sense. 
  ##         Category: Glossentry elements
  element glossterm { glossterm.attlist, glossterm.content }
glossterm.attlist &= glossterm.attributes
# LONG NAME: Glossary Definition
glossdef.content = abstract.cnt*
glossdef.attributes =
  univ-atts,
  attribute outputclass { text }?
glossdef.element =
  
  ## The <glossdef> element specifies the definition of one sense of a term. If
  ##         a term has multiple senses, create a separate <glossentry> topic to define each sense.
  ##         Category: Glossentry elements
  element glossdef { glossdef.attlist, glossdef.content }
glossdef.attlist &= glossdef.attributes
# LONG NAME: Glossary Body
glossBody.content =
  glossPartOfSpeech?,
  glossStatus?,
  glossProperty*,
  glossSurfaceForm?,
  glossUsage?,
  glossScopeNote?,
  glossSymbol*,
  note*,
  glossAlt*
glossBody.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossBody.element =
  
  ## The <glossbody> element is used to provide details about a glossary term
  ##         (such as part of speech or additional forms of the term).
  element glossBody { glossBody.attlist, glossBody.content }
glossBody.attlist &= glossBody.attributes
# LONG NAME: Glossary Abbreviation
glossAbbreviation.content = (text | keyword | term | tm)*
glossAbbreviation.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossAbbreviation.element =
  
  ## The <glossAbbreviation> element provides an abbreviated form of the term
  ##         contained in a <glossterm> element. 
  element glossAbbreviation {
    glossAbbreviation.attlist, glossAbbreviation.content
  }
glossAbbreviation.attlist &= glossAbbreviation.attributes
# LONG NAME: Glossary Acronym
glossAcronym.content = (text | keyword | term | tm)*
glossAcronym.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossAcronym.element =
  
  ## The <glossAcronym> element defines an acronym as an alternate form for the
  ##         term defined in the <glossterm> element.
  element glossAcronym { glossAcronym.attlist, glossAcronym.content }
glossAcronym.attlist &= glossAcronym.attributes
# LONG NAME: Glossary Short Form
glossShortForm.content = (text | keyword | term | tm)*
glossShortForm.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossShortForm.element =
  
  ## The <glossShortForm> element provides a shorter alternative to the primary
  ##         term specified in the <glossterm> element.
  element glossShortForm {
    glossShortForm.attlist, glossShortForm.content
  }
glossShortForm.attlist &= glossShortForm.attributes
# LONG NAME: Glossary Synonym
glossSynonym.content = (text | keyword | term | tm)*
glossSynonym.attributes =
  id-atts,
  localization-atts,
  attribute base { text }?,
  base-attribute-extensions,
  attribute outputclass { text }?
glossSynonym.element =
  
  ## Provides a term that is a synonym of the primary value in the <glossterm>
  ##         element.
  element glossSynonym { glossSynonym.attlist, glossSynonym.content }
glossSynonym.attlist &= glossSynonym.attributes
# LONG NAME: Part of Speech
glossPartOfSpeech.content = empty
glossPartOfSpeech.attributes = data-element-atts
glossPartOfSpeech.element =
  
  ## Identifies the part of speech for the preferred and alternate terms.
  ##         Alternate terms must have the same part of speech as the preferred term because all terms in
  ##         the glossentry topic designate the same subject. If the part of speech isn't specified, the
  ##         default is a noun for the standard enumeration.
  element glossPartOfSpeech {
    glossPartOfSpeech.attlist, glossPartOfSpeech.content
  }
glossPartOfSpeech.attlist &= glossPartOfSpeech.attributes
# LONG NAME: Glossary Status
glossStatus.content = empty
glossStatus.attributes = data-element-atts
glossStatus.element =
  
  ## Identifies the usage status of a preferred or alternate term. If the status
  ##         isn't specified, the <glossterm> provides a preferred term and an alternate term provides
  ##         an allowed term.
  element glossStatus { glossStatus.attlist, glossStatus.content }
glossStatus.attlist &= glossStatus.attributes
# LONG NAME: Glossary Status
glossProperty.content = data.cnt*
glossProperty.attributes = data-element-atts
glossProperty.element =
  
  ## The <glossProperty> element is an extension point which allows additional
  ##         details about the preferred term or its subject.
  element glossProperty { glossProperty.attlist, glossProperty.content }
glossProperty.attlist &= glossProperty.attributes
# LONG NAME: Glossary Surface Form
glossSurfaceForm.content = (text | keyword | term | tm)*
glossSurfaceForm.attributes =
  univ-atts,
  attribute outputclass { text }?
glossSurfaceForm.element =
  
  ##  The <glossSurfaceForm> element specifies an unambiguous presentation of
  ##         the <glossterm> that may combine multiple forms. The surface form is suitable to
  ##         introduce the term in new contexts.
  element glossSurfaceForm {
    glossSurfaceForm.attlist, glossSurfaceForm.content
  }
glossSurfaceForm.attlist &= glossSurfaceForm.attributes
# LONG NAME: Glossary Usage
glossUsage.content = note.cnt*
glossUsage.attributes =
  attribute type {
    "attention"
    | "caution"
    | "danger"
    | "fastpath"
    | "important"
    | "note"
    | "notice"
    | "other"
    | "remember"
    | "restriction"
    | "tip"
    | "warning"
    | "-dita-use-conref-target"
  }?,
  attribute othertype { text }?,
  univ-atts,
  attribute outputclass { text }?
glossUsage.element =
  
  ## The <glossUsage> element provides information about the correct use of a
  ##         term, such as where or how it can be used.
  element glossUsage { glossUsage.attlist, glossUsage.content }
glossUsage.attlist &= glossUsage.attributes
# LONG NAME: Glossary Scope Note
glossScopeNote.content = note.cnt*
glossScopeNote.attributes =
  attribute type {
    "attention"
    | "caution"
    | "danger"
    | "fastpath"
    | "important"
    | "note"
    | "notice"
    | "other"
    | "remember"
    | "restriction"
    | "tip"
    | "warning"
    | "-dita-use-conref-target"
  }?,
  attribute othertype { text }?,
  univ-atts,
  attribute outputclass { text }?
glossScopeNote.element =
  
  ## A clarification of the subject designated by the <glossterm> such as
  ##         examples of included or excluded companies or products. For instance, a scope note for
  ##         "Linux" might explain that the term doesn't apply to UNIX products and give some
  ##         examples of Linux products that are included as well as UNIX products that are
  ##         excluded.
  element glossScopeNote {
    glossScopeNote.attlist, glossScopeNote.content
  }
glossScopeNote.attlist &= glossScopeNote.attributes
# LONG NAME: Glossary Symbol
glossSymbol.content = alt?, longdescref?
glossSymbol.attributes =
  attribute href { text },
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  attribute keyref { text }?,
  attribute longdescref { text }?,
  attribute height { xsd:NMTOKEN }?,
  attribute width { xsd:NMTOKEN }?,
  attribute align { text }?,
  attribute scale { xsd:NMTOKEN }?,
  attribute scalefit { "yes" | "no" | "-dita-use-conref-target" }?,
  [ a:defaultValue = "inline" ]
  attribute placement {
    "break" | "inline" | "-dita-use-conref-target"
  }?,
  univ-atts,
  attribute outputclass { text }?
glossSymbol.element =
  
  ## The <glossSymbol> element identifies a standard image associated with the
  ##         subject of the <glossterm>.
  element glossSymbol { glossSymbol.attlist, glossSymbol.content }
glossSymbol.attlist &= glossSymbol.attributes
# LONG NAME: Glossary Alternate Form
glossAlt.content =
  (glossAbbreviation | glossAcronym | glossShortForm | glossSynonym)?,
  glossStatus?,
  glossProperty*,
  glossUsage?,
  note*,
  glossAlternateFor*
glossAlt.attributes =
  univ-atts,
  attribute outputclass { text }?
glossAlt.element =
  
  ## The <glossAlt> element contains a variant term for the preferred term. The
  ##         variant should have the same meaning as the term in the <glossterm> element; the variant
  ##         is simply another way to refer to the same term. There may be many ways to refer to a term;
  ##         each variant is placed in its own <glossAlt> element.
  element glossAlt { glossAlt.attlist, glossAlt.content }
glossAlt.attlist &= glossAlt.attributes
# LONG NAME: Glossary - Alternate For
glossAlternateFor.content = empty
glossAlternateFor.attributes =
  attribute href { text }?,
  attribute keyref { text }?,
  attribute type { text }?,
  attribute format { text }?,
  attribute scope {
    "external" | "local" | "peer" | "-dita-use-conref-target"
  }?,
  univ-atts,
  attribute outputclass { text }?
glossAlternateFor.element =
  
  ## The <glossAlternateFor> element indicates when a variant term has a relationship to another variant term as well as to the preferred term.
  element glossAlternateFor {
    glossAlternateFor.attlist, glossAlternateFor.content
  }
glossAlternateFor.attlist &= glossAlternateFor.attributes
# Specialization attributes. Global attributes and class defaults
glossentry.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/topic concept/concept glossentry/glossentry "
  ]
  attribute class { text }?
glossterm.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/title concept/title glossentry/glossterm "
  ]
  attribute class { text }?
glossdef.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/abstract concept/abstract glossentry/glossdef "
  ]
  attribute class { text }?
glossBody.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/body concept/conbody glossentry/glossBody "
  ]
  attribute class { text }?
glossAbbreviation.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/title concept/title glossentry/glossAbbreviation "
  ]
  attribute class { text }?
glossAcronym.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/title concept/title glossentry/glossAcronym "
  ]
  attribute class { text }?
glossShortForm.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/title concept/title glossentry/glossShortForm "
  ]
  attribute class { text }?
glossSynonym.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/title concept/title glossentry/glossSynonym "
  ]
  attribute class { text }?
glossPartOfSpeech.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/data concept/data glossentry/glossPartOfSpeech "
  ]
  attribute class { text }?
glossProperty.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/data concept/data glossentry/glossProperty "
  ]
  attribute class { text }?
glossStatus.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/data concept/data glossentry/glossStatus "
  ]
  attribute class { text }?
glossAlt.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/section concept/section glossentry/glossAlt "
  ]
  attribute class { text }?
glossAlternateFor.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/xref concept/xref glossentry/glossAlternateFor "
  ]
  attribute class { text }?
glossScopeNote.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/note concept/note glossentry/glossScopeNote "
  ]
  attribute class { text }?
glossSurfaceForm.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/p concept/p glossentry/glossSurfaceForm "
  ]
  attribute class { text }?
glossSymbol.attlist &=
  global-atts,
  [
    a:defaultValue =
      "- topic/image concept/image glossentry/glossSymbol "
  ]
  attribute class { text }?
glossUsage.attlist &=
  global-atts,
  [
    a:defaultValue = "- topic/note concept/note glossentry/glossUsage "
  ]
  attribute class { text }?
