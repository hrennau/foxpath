<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.-->
<!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
<project name="dita2javahelp">
    
    <!-- OXYGEN PATCH START EXM-18027 -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <!-- OXYGEN PATCH END EXM-18027 -->
  
    <target name="dita2javahelp"
            unless="noMap"
        depends="build-init, preprocess, copy-css, 
                     dita.topics.html, dita.inner.topics.html, dita.outer.topics.html">
          <antcall target="dita.map.javahelp"></antcall>
          <antcall target="compile.Java.Help"></antcall>
      
    <!-- OXYGEN PATCH START EXM-18027 -->
        <propertyregex
            property="profile.name"
            override="true"
            input="${dita.input.valfile}"
            regexp="(.+)/(.+)\.ditaval"
            select="\2"
        />
        <condition property="helpset.name" value="${dita.map.filename.root}_${profile.name}">
            <and>
                <isset property="profile.name"/>
                <not>
                    <isset property="helpset.name"/>
                </not>
            </and>
        </condition>
        <condition property="helpset.name" value="${dita.map.filename.root}">
            <and>
                <not>
                    <isset property="profile.name"/>
                </not>
                <not>
                    <isset property="helpset.name"/>
                </not>
            </and>
        </condition>
      
      <antcall target="correctHelpIDs"/>
      <antcall target="index"/>
      <jar destfile="${dita.map.output.dir}/${dita.map.filename.root}.jar" basedir="${dita.map.output.dir}">
        <include name="**/*"/>
        <exclude name="${dita.map.filename.root}.jar"/>
      </jar>
    <!-- OXYGEN PATCH END EXM-18027 -->
    </target>
  
  <!-- OXYGEN PATCH START EXM-18027 -->
  <!-- Duplicate the 4 meta files and do a find/replace with regexp in the duplicated files for
          removing topics_, tasks_ and concepts_ from help IDs. -->
  <target name="correctHelpIDs">
    <move file="${dita.map.output.dir}/${dita.map.filename.root}_helpset.hs" tofile="${dita.map.output.dir}/${helpset.name}.hs" />
    <antcall target="removeAllHelpIDPrefixes">
      <param name="javahelp.meta.file" value="${dita.map.output.dir}/${helpset.name}.hs"/>
    </antcall>
    <replaceregexp 
        file="${dita.map.output.dir}/${helpset.name}.hs" 
        match="${dita.map.filename.root}.jhm"
        replace="map.jhm"
        encoding="UTF-8"
        flags="g" />
    <replaceregexp 
        file="${dita.map.output.dir}/${helpset.name}.hs" 
        match="${dita.map.filename.root}.xml"
        replace="toc.xml"
        encoding="UTF-8"
        flags="g" />
    <replaceregexp 
        file="${dita.map.output.dir}/${helpset.name}.hs" 
        match="${dita.map.filename.root}_index.xml"
        replace="index.xml"
        encoding="UTF-8"
        flags="g" />
    
    <move file="${dita.map.output.dir}/${dita.map.filename.root}_index.xml" tofile="${dita.map.output.dir}/index.xml" />
    <antcall target="removeAllHelpIDPrefixes">
      <param name="javahelp.meta.file" value="${dita.map.output.dir}/index.xml"/>
    </antcall>
    
    <move file="${dita.map.output.dir}/${dita.map.filename.root}.xml" tofile="${dita.map.output.dir}/toc.xml" />
    <antcall target="removeAllHelpIDPrefixes">
      <param name="javahelp.meta.file" value="${dita.map.output.dir}/toc.xml"/>
    </antcall>
    
    <move file="${dita.map.output.dir}/${dita.map.filename.root}.jhm" tofile="${dita.map.output.dir}/map.jhm" />
    <antcall target="removeAllHelpIDPrefixes">
      <param name="javahelp.meta.file" value="${dita.map.output.dir}/map.jhm"/>
    </antcall>
  </target>

  <target name="removeAllHelpIDPrefixes">
    <antcall target="removeHelpIDPrefix">
      <param name="javahelp.meta.file" value="${javahelp.meta.file}"/>
      <param name="javahelp.meta.prefix" value="topics_"/>
    </antcall>
    <antcall target="removeHelpIDPrefix">
      <param name="javahelp.meta.file" value="${javahelp.meta.file}"/>
      <param name="javahelp.meta.prefix" value="tasks_"/>
    </antcall>
    <antcall target="removeHelpIDPrefix">
      <param name="javahelp.meta.file" value="${javahelp.meta.file}"/>
      <param name="javahelp.meta.prefix" value="concepts_"/>
    </antcall>
    <antcall target="removeHelpIDPrefix">
      <param name="javahelp.meta.file" value="${javahelp.meta.file}"/>
      <param name="javahelp.meta.prefix" value="references_"/>
    </antcall>
  </target>

  <target name="removeHelpIDPrefix">
      <replaceregexp 
          file="${javahelp.meta.file}" 
          match="${javahelp.meta.prefix}"
          replace=""
          encoding="UTF-8"
          flags="g" />
  </target>

  <target name="index">
    <echo message="Making the JavaHelp index for ${dita.map.filename.root}"/>
     <!--EXM-29583 Delete JavaHelpSearch Folder -->
    <delete dir="${dita.map.output.dir}/JavaHelpSearch"/>
    <mkdir dir="${dita.map.output.dir}/JavaHelpSearch"/>
    <java classname="com.sun.java.help.search.Indexer" fork="yes" dir="${dita.map.output.dir}" failonerror="true">
      <classpath>
        <pathelement path="${dita.dir}/lib/jsearch.jar"/>
      </classpath>
      <arg value="."/>
      <arg value="-verbose"/>
      <arg value="-db"/>
      <arg value="JavaHelpSearch"/>
    </java>
  </target>
    <!-- OXYGEN PATCH END EXM-18027 -->
  

    <target name="dita.map.javahelp"
            depends="dita.map.javahelp.init, dita.map.javahelp.toc, 
        						 dita.map.javahelp.map, dita.map.javahelp.set, dita.map.javahelp.index,
                                 dita.out.map.javahelp.toc, dita.out.map.javahelp.map, 
                                 dita.out.map.javahelp.set, dita.out.map.javahelp.index">
    </target>

    <target name="dita.map.javahelp.init"
            description="Init properties for JavaHelp">
        <basename property="dita.map.toc.root"
                  file="${dita.input.filename}"
                  suffix=".ditamap" />
        <condition property="args.javahelp.toc" value="${dita.map.toc.root}">
            <not>
                <isset property="args.javahelp.toc" />
            </not>
        </condition>
        <condition property="out.ext" value=".html">
            <not>
                <isset property="out.ext" />
            </not>
        </condition>
        <condition property="args.javahelp.map" value="${dita.map.toc.root}">
            <not>
                <isset property="args.javahelp.map" />
            </not>
        </condition>
    </target>

    <target name="dita.map.javahelp.toc"
            depends="dita.map.javahelp.init" if="old.transform"
            description="Build JavaHelp TOC file">
        <xslt
              basedir="${dita.temp.dir}"
              destdir="${output.dir}"
              includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
              classpathref="dost.class.path"
              style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelptoc.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <mapper type="glob"
                    from="*${dita.input.filename}"
                    to="*${args.javahelp.toc}.xml" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>
    
    <target name="dita.out.map.javahelp.toc"
        depends="dita.map.javahelp.init" if="inner.transform"
        description="Build JavaHelp TOC file">
        <xslt
            basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
            classpathref="dost.class.path"
            style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelptoc.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <mapper type="glob"
                from="${user.input.file}"
                to="${args.javahelp.toc}.xml" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>

    <target name="dita.map.javahelp.map"
            depends="dita.map.javahelp.init" if="old.transform"
            description="Build JavaHelp Map file">
        <xslt
              basedir="${dita.temp.dir}"
              destdir="${output.dir}"
              includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
              classpathref="dost.class.path"
              style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelpmap.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <mapper type="glob"
                    from="*${dita.input.filename}"
                    to="*${args.javahelp.map}.jhm" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>
    
    <target name="dita.out.map.javahelp.map"
        depends="dita.map.javahelp.init" if="inner.transform"
        description="Build JavaHelp Map file">
        <xslt
            basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
            classpathref="dost.class.path"
            style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelpmap.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <mapper type="glob"
                from="${user.input.file}"
                to="${args.javahelp.map}.jhm" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>

    <target name="dita.map.javahelp.set"
            depends="dita.map.javahelp.init, dita.map.javahelp.map" if="old.transform"
            description="Build JavaHelp Set file">
        <xslt
              basedir="${dita.temp.dir}"
              destdir="${output.dir}"
              includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
              classpathref="dost.class.path"
              style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelpset.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="javahelpmap" expression="${args.javahelp.map}" />
            <param name="javahelptoc" expression="${args.javahelp.toc}" />
        	<param name="basedir" expression="${basedir}"/>
        	<param name="outputdir" expression="${output.dir}"/>
        	<!--param name="outputdir" expression="${dita.dir}${file.separator}${output.dir}${file.separator}" /-->
            <mapper type="glob"
                    from="*${dita.input.filename}"
                    to="*${dita.map.toc.root}_helpset.hs" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>
    
    <target name="dita.out.map.javahelp.set"
        depends="dita.map.javahelp.init, dita.out.map.javahelp.map" if="inner.transform"
        description="Build JavaHelp Set file">
        <xslt
            basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
            classpathref="dost.class.path"
            style="${dita.plugin.org.dita.javahelp.dir}/xsl/map2javahelpset.xsl">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <param name="javahelpmap" expression="${args.javahelp.map}" />
            <param name="javahelptoc" expression="${args.javahelp.toc}" />
        	<param name="basedir" expression="${basedir}"/>
        	<param name="outputdir" expression="${output.dir}"/>
        	<!--param name="outputdir" expression="${dita.dir}${file.separator}${output.dir}${file.separator}" /-->
            <mapper type="glob"
                from="${user.input.file}"
                to="${dita.map.toc.root}_helpset.hs" />
          <xmlcatalog refid="dita.catalog"/>
        </xslt>
    </target>

    <target name="dita.map.javahelp.index" if="old.transform"
            description="Build JavaHelp Index file">
        <pipeline message="Extract index term."
                  tempdir="${dita.temp.dir}"
                  inputmap="${user.input.file}">
          <module class="org.dita.dost.module.IndexTermExtractModule">
            <param name="output" location="${output.dir}${file.separator}${user.input.file}"/>
            <param name="targetext" value=".html"/>
            <param name="indextype" value="javahelp"/>
            <param name="encoding" value="${args.dita.locale}" if="args.dita.locale"/>
          </module>
        </pipeline>
    </target>
    
    <target name="dita.out.map.javahelp.index" if="inner.transform"
        description="Build JavaHelp Index file">
        <pipeline message="Extract index term."
            tempdir="${dita.temp.dir}"
            inputmap="${user.input.file}">
          <module class="org.dita.dost.module.IndexTermExtractModule">
            <param name="output" location="${output.dir}${file.separator}${dita.map.filename.root}.xml"/>
            <param name="targetext" value=".html"/>
            <param name="indextype" value="javahelp"/>
            <param name="encoding" value="${args.dita.locale}" if="args.dita.locale"/>
          </module>
        </pipeline>
    </target>

    <target name="compile.Java.Help"
            if="env.JHHOME"
            description="Compile Java Help output">
        <!-- delete 'JavaHelpSearch' directory before compiling. -->
        <condition property="compile.dir" value="${dita.map.output.dir}">
            <isset property="old.transform"/>
        </condition>
        <condition property="compile.dir" value="${output.dir}">
            <isset property="inner.transform"/>
        </condition>
        <delete dir="${compile.dir}${file.separator}JavaHelpSearch" />
        <java jar="${env.JHHOME}${file.separator}javahelp${file.separator}bin${file.separator}jhindexer.jar"
              fork="true"
              dir="${compile.dir}">
            <arg value="." />
        </java>
    </target>

    <!-- depecrated: keep for back-compatibility, will be remvoed in a later release -->
    <target name="dita.topics.javahelp" depends="dita.topics.html" />

</project>
