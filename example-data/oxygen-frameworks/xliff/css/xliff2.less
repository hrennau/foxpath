@namespace x12 "urn:oasis:names:tc:xliff:document:1.2";
@namespace x20 "urn:oasis:names:tc:xliff:document:2.0";
@namespace oxy "http://www.oxygenxml.com/extensions/author";
@namespace xmrk "urn:xmarker";

xliff, file, header, body, tool, trans-unit, source, target, note, unit,
glossary, glossentry, term, translation, definition{
    display:block;
}

.title() {
    margin-top:1em;
    margin-bottom:1em;
    
    display:block;
    font-size:1.5em;
    text-align:center;
    font-family:arial, helvetica, sans-serif;
}
.info() {
    display:block;
    font-size:1.1em;
    text-align:right;
    padding:0.5em;
    margin:1em;
    background-color:#EEEEEE;
}

.entry() {
    -oxy-foldable:true;
    -oxy-folded:true;
    margin:1em;
    padding:0.5em;
    border:1px solid black;
}


.editable(@editClass:'-oxy-edit', @editLayer:19) {
    &:before(@{editLayer}){
        visibility:hidden;
        content:
           oxy_button(action, oxy_action(
              name, 'Show all attributes', 
              description, 'Edit all attributes', 
              operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation', 
              arg-setPseudoClassNames, '@{editClass}'          
            ));
        ;
    }
    
    &:-oxy-edit:before(@{editLayer}) {
        visibility:hidden;
        content:
           oxy_button(action, oxy_action(
              name, 'Show less attributes', 
              description, 'Done editing', 
              operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation', 
              arg-removePseudoClassNames, '@{editClass}'          
            ));
        
        ;
    }
    
    &:focus-within:before(@{editLayer}),
    &:hover:before(@{editLayer}) {
        visibility:visible;
    }
}



x12|xliff:before(10) {
    .title();
    content: "XLIFF 1.2";
}
x20|xliff:before(10) {
    .title();
    content: "XLIFF 2.0";
}

*|xliff[srcLang][trgLang]:before(8) {
    .info();
    content : 
        "translate from " 
        oxy_textfield(
          edit, '@srcLang',
          columns, 5)
        " to " 
        oxy_textfield(
          edit, '@trgLang',
          columns, 5)
        ;
}

glossary *{
    display:block;
}

x12|file,
x20|file {
    .entry();
    .editable();
}

x12|file:before(25),
x20|file:before(25){
    content: oxy_label(text, "File");
    color:gray;
}
x12|file[id]:before(20),
x20|file[id]:before(20){
    content: 
    oxy_label(text, " ID") 
    oxy_textfield(edit, "@id");
}

x12|file[original]:before(18),
x20|file[original]:before(18){
    display:block;
    content:
        oxy_label(text, "Original file", width, 15%) 
        oxy_textfield(edit, "@original", width, 80%);
}

x12|file:-oxy-edit:before(15),
x20|file:-oxy-edit:before(15){
    display:block;
    content:
        oxy_label(text, "Source language", width, 25%)
        oxy_textfield(edit, "@source-language", width, 70%);
}

x12|file:-oxy-edit:before(14),
x20|file:-oxy-edit:before(14){
    display:block;
    content:
        oxy_label(text, "Target language", width, 25%)
        oxy_textfield(edit, "@target-language", width, 70%);
}

x12|file:-oxy-edit:before(13),
x20|file:-oxy-edit:before(13){
    display:block;
    content:
        oxy_label(text, "Data type", width, 25%)
        oxy_textfield(edit, "@datatype", width, 70%);
}

x12|file:-oxy-edit:before(12),
x20|file:-oxy-edit:before(12){
    display:block;
    content:
        oxy_label(text, "Source dir", width, 25%)
        oxy_textfield(edit, "@srcDir", width, 70%);
}

x12|file:-oxy-edit:before(11),
x20|file:-oxy-edit:before(11){
    display:block;
    content:
        oxy_label(text, "Target dir", width, 25%)
        oxy_textfield(edit, "@trgDir", width, 70%);
}

x12|file:before,
x20|file:before{
    content:
        oxy_checkbox(
            edit, '@translate',
            labels, ''
        )
        oxy_label(text, "Translate")
        "        "
        oxy_checkbox(
            edit, '@canResegment',
            labels, ''
        )
        oxy_label(text, "Can resegment ")
}

x12|file > *,
x20|file > *{
    padding-left:1em;
}

skeleton:before(10) {
    content:"Skeleton";
}
skeleton {
    display:block;
    border:1px solid #EEEEEE;
    padding:0.2em;
    margin:0.2em;
    -oxy-foldable:true;
    white-space:-oxy-trim-when-ws-only;
    -oxy-folded:true;
}

oxy|comment {
    display:none!important;
} 
skeleton *:before(10) {
    content: oxy_local-name() " ";
    background-color:#EEEEFF;
}

skeleton *:before(8) {
    color:gray;
    content: " " oxy_attributes() " ";
    white-space:pre-wrap;
    background-color:#F5F5FF;
}

skeleton * {
    margin-left:1em;
    display:block;
    
}

segment:before(10){
    content:"Segment ";
    color:gray;
}

segment:before(8){
    content: attr(id);
    color:#AAAAFF;
}
segment {
    display:block;
}



ignorable:before{
    content:"Ignorable";
    color:gray;
}

ignorable > * {
    padding-left:1em;
}

unit{
    border:1px solid blue;
    margin:0.5em;
    padding:0.5em;
}


unit:before(10){
    content:"Unit ";
    color:gray;
}
unit[id]:before(9){
    content: attr(id);
    color:#AAAAFF;
}



unit[name]:before{
    -oxy-append-content:" Name:" oxy_combobox(edit, "@name");
}

unit[type]:before{
    -oxy-append-content:" Type:" oxy_combobox(edit, "@type");
}

unit[srcDir]:before{
    -oxy-append-content:" Source Dir:" oxy_combobox(edit, "@srcDir");
}
unit[trgDir]:before{
    -oxy-append-content:" Target Dir:" oxy_combobox(edit, "@trgDir");
}
unit[translate]:before{
    -oxy-append-content:" Translate:" oxy_combobox(edit, "@translate");
}
unit[canResegment]:before{
    -oxy-append-content:" Can Reseg:" oxy_combobox(edit, "@canResegment");
}


unit > * {
    padding-left:1em;
}


header:before{
    content:"Header";
    color:gray;
}

header > * {
    padding-left:1em;
}

body:before{
    content:"Body";
    color:gray;
}

body > * {
    padding-left:1em;
}

tool:before{
    content:"Tool ID:" oxy_textfield(edit, "@tool-id") " Name:" oxy_textfield(edit, "@tool-name") " Version:" oxy_textfield(edit, "@tool-version");
    color:gray;
}

trans-unit{
    margin:2px;
}

trans-unit:before{
    content:"Translation Unit, Approved: "
    oxy_checkbox(
        edit, '@approved',
        values, 'yes',
        uncheckedValues, 'no',
        labels, 'Approved'
    );
    color:gray;
}

trans-unit[approved="yes"] > * {
    -oxy-editable: false;
    background-color: #c8ffd2;
    border: 1pt solid #82c896;
    /* Add transparency */
    color:rgba(50, 50, 50, 0.7);
}

trans-unit > *{
    padding-left:1em;
}

group {
    display:block;
    
}

source:before{
    content:"Source: ";
    display:block;
    color:gray;
    background-color:white;
}

source {
    background-color:#FFFAD5;
    margin:0.5em;
}

target:before{
    content:"Target: ";
    display:block;
    color:gray;
    background-color:white;
    
}

target {
    background-color:#DFFFAF;
    margin:0.5em;
}

note:before{
    content:"Note: ";
    color:gray;
}
/*Authors do not edit these nodes*/
source, note{
    -oxy-editable:false;
}
glossary:before{
    content:"Glossary";
    color:gray;
}

term:before{
    content:"Term: ";
    color:gray;
}

translation:before{
    content:"Translation: ";
    color:gray;
}

definition:before{
    content:"Definition: ";
    color:gray;
}

glossary > *{
    padding-left:1em;
}


segment ph {
    -oxy-display-tags:none;
    border:1px solid gray;
}
segment ph:before {
    content: " [" "ph: " attr(id) "] ";
}

segment {
pc, ph, cp, sc, ec, mrk, sm, em {
    display:inline;
}}
