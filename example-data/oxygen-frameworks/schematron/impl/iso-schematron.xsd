<?xml version="1.0" encoding="UTF-8"?>
<!-- 
      XSD schema for ISO Schematron. 
      Converted with TRANG and made some manual fixes to be valid.
      Added annotations.
      George Bina / http://www.oxygenxml.com
      April 11, 2007
      @ 2002-2017 Syncro Soft SRL.
      All rights reserved.
      
      Redistribution and use in source and binary forms, 
      with or without modification, are permitted provided 
      that the following conditions are met:
      
      Redistributions of source code must retain the above 
      copyright notice, this list of conditions and the following 
      disclaimer. 
      
      Redistributions in binary form must reproduce the above 
      copyright notice, this list of conditions and the following 
      disclaimer in the documentation and/or other materials 
      provided with the distribution. 
      
      Neither the name of the Syncro Soft SRL nor the names of its 
      contributors may be used to endorse or promote products 
      derived from this software without specific prior written permission.
      
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS 
      AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED 
      WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
      WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
      PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
      THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
      DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
      OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
      OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
      AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
      STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
      ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN 
      IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://purl.oclc.org/dsdl/schematron"
  xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd">
    <xs:annotation>
      <xs:documentation> Get access to the xml: attribute groups for xml:lang </xs:documentation>
    </xs:annotation>
  </xs:import>

  <xs:annotation>
    <xs:documentation source="http://www.schematron.com" xml:lang="en"/>
  </xs:annotation>
  <!-- Element declarations -->
  <xs:element name="schema">
    <xs:annotation>
      <xs:documentation> The top-level element of a Schematron schema. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:include"/>
        <xs:element ref="sch:extends"/>
        <xs:element ref="sch:title"/>
        <xs:element ref="sch:ns"/>
        <xs:element ref="sch:p"/>
        <xs:element ref="sch:let"/>
        <xs:element ref="sch:phase"/>
        <xs:element ref="sch:pattern"/>
        <xs:element ref="sch:diagnostics"/>
        <xs:element ref="sch:properties"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation> This attribute enables unique identification of the element. According
            to XML specification the value of an attribute of ID type can contain only characters
            permitted for NMTOKEN and must start with a letter. No element type may have more than
            one ID attribute specified. The value of an ID attribute must be unique between all
            values of all ID attributes. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:rich"/>
      <xs:attribute name="schemaVersion" type="sch:non-empty-string">
        <xs:annotation>
          <xs:documentation> The optional schemaVersion attribute gives the version of the schema.
            Its allowed values are not defined by this part of ISO/IEC 19757 and its use is
            implementation-dependent. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="defaultPhase" type="xs:IDREF">
        <xs:annotation>
          <xs:documentation> The defaultPhase attribute may be used to indicate the phase to use in
            the absence of explicit user-supplied information. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="queryBinding" type="sch:non-empty-string">
        <xs:annotation>
          <xs:documentation>The optional queryBinding attribute provides the short name of the query
            language binding in use. If this attribute is specified, it is an error if it has a
            value that the current implementation does not support.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="active">
    <xs:annotation>
      <xs:documentation>Defines the pattern that is active in the current phase.</xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:dir"/>
        <xs:element ref="sch:emph"/>
        <xs:element ref="sch:span"/>
      </xs:choice>
      <xs:attribute name="pattern" use="required" type="xs:IDREF">
        <xs:annotation>
          <xs:documentation>The required pattern attribute is a reference to a pattern that is
            active in the current phase.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="assert" type="sch:assertReportType">
    <xs:annotation>
      <xs:documentation>An assertion made about the context nodes. The data content is a
        natural-language assertion. The natural-language assertion shall be a positive statement of
        a constraint.<br/> NOTE:<br/> The natural-language assertion may contain information about
        actual values in addition to expected values and may contain diagnostic information. Users
        should note, however, that the diagnostic element is provided for such information to
        encourage clear statement of the natural-language assertion. </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType mixed="true" name="assertReportType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="sch:foreign"/>
      <xs:element ref="sch:name"/>
      <xs:element ref="sch:value-of"/>
      <xs:element ref="sch:emph"/>
      <xs:element ref="sch:dir"/>
      <xs:element ref="sch:span"/>
    </xs:choice>
    <xs:attribute name="test" use="required" type="sch:exprValue">
      <xs:annotation>
        <xs:documentation>The required test attribute is an assertion test evaluated in the
          current context. If the test evaluates positive, the assert succeeds.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flag" type="sch:flagValue">
      <xs:annotation>
        <xs:documentation>The flag attribute allows more detailed outcomes. A boolean variable
          with initial value false. A flag is implicitly declared by an assertion or rule having a
          flag attribute with that name. The value of a flag becomes true when an assertion with
          that flag fails or a rule with that flag fires. The purpose of flags is to convey state
          or severity information to a subsequent process.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:ID">
      <xs:annotation>
        <xs:documentation> The unique identifier with the schema for the element.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="diagnostics" type="xs:IDREFS">
      <xs:annotation>
        <xs:documentation>The optional diagnostics attribute is a reference to further diagnostic
          information.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="properties" type="xs:IDREFS">
      <xs:annotation>
        <xs:documentation>
          The optional properties attribute is a reference to further properties information.
          A property of an assert/report element typically should be information for validation.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="sch:rich"/>
    <xs:attributeGroup ref="sch:linkable"/>
    <xs:attributeGroup ref="sch:foreign"/>
  </xs:complexType>
  <xs:element name="diagnostic">
    <xs:annotation>
      <xs:documentation> A natural-language message giving more specific details concerning a failed
        assertion, such as found versus expected values and repair hints. NOTE:<br/> In multiple
        languages may be supported by using a different diagnostic element for each language, with
        the appropriate xml:lang language attribute, and referencing all the unique identifiers of
        the diagnostic elements in the diagnostics attribute of the assertion. <br/> An
        implementation is not required to make use of this element. </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:value-of"/>
        <xs:element ref="sch:emph"/>
        <xs:element ref="sch:dir"/>
        <xs:element ref="sch:span"/>
      </xs:choice>
      <xs:attribute name="id" use="required" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The unique identifier with the schema for the diagnostic element.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:rich"/>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="diagnostics">
    <xs:annotation>
      <xs:documentation> Section containing individual diagnostic elements. An implementation is not
        required to make use of this element. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:include"/>
        <xs:element ref="sch:diagnostic"/>
      </xs:choice>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dir">
    <xs:annotation>
      <xs:documentation> A section of natural-language text with a direction specified by the value
        attribute. <br/> An implementation is not required to make use of this element.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:group ref="sch:foreign"/>
      <xs:attribute name="value">
        <xs:annotation>
          <xs:documentation> Specify the direction of the text. The value ltr indicates
            left-to-right text; the value rtl indicates right-to-left text. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ltr">
              <xs:annotation>
                <xs:documentation> The value ltr indicates left-to-right text. </xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rtl">
              <xs:annotation>
                <xs:documentation>The value rtl indicates right-to-left text.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="emph">
    <xs:annotation>
      <xs:documentation> A portion of text that should be rendered with some emphasis. An
        implementation is not required to make use of this element. </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attributeGroup ref="sch:foreign-empty"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="let">
    <xs:annotation>
      <xs:documentation> A declaration of a named variable. If the let element is the child of a
        rule element, the variable is calculated and scoped to the current rule and context.
        Otherwise, the variable is calculated with the context of the instance document root. <br/>
        The variable is substituted into assertion tests and other expressions in the same rule
        before the test or expression is evaluated. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="sch:foreign-element"/>
      <xs:attribute name="name" use="required" type="sch:nameValue">
        <xs:annotation>
          <xs:documentation> The required name attribute is the name of the variable.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation> The value attribute is an expression evaluated in the current
            context. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="name">
    <xs:annotation>
      <xs:documentation> Provides the names of nodes from the instance document to allow clearer
        assertions and diagnostics.<br/> An implementation which does not report natural-language
        assertions is not required to make use of this element. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="path" type="sch:pathValue">
        <xs:annotation>
          <xs:documentation> The optional path attribute is an expression evaluated in the current
            context that returns a string that is the name of a node. In the latter case, the name
            of the node is used. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign-empty"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ns">
    <xs:annotation>
      <xs:documentation> Specification of a namespace prefix and URI. NOTE:<br/> Because the
        characters allowed as names may change in versions of XML subsequent to W3C XML 1.0, the
        RELAX NG Compact schema for Schematron does not constrain the prefix to particular
        characters. In an ISO Schematron schema, namespace prefixes in context expressions,
        assertion tests and other query expressions should use the namespace bindings provided by
        this element. Namespace prefixes should not use the namespace bindings in scope for element
        and attribute names. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="uri" use="required" type="sch:uriValue">
        <xs:annotation>
          <xs:documentation> The required uri attribute is a namespace URI. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="prefix" use="required" type="sch:nameValue">
        <xs:annotation>
          <xs:documentation> The required prefix attribute is an XML name with no colon character.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign-empty"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="p">
    <xs:annotation>
      <xs:documentation> A paragraph of natural language text containing maintainer and user
        information about the parent element. <br/>An implementation is not required to make use of
        this element. </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:dir"/>
        <xs:element ref="sch:emph"/>
        <xs:element ref="sch:span"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The unique identifier with the schema for the p element.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="class" type="sch:classValue">
        <xs:annotation>
          <xs:documentation> The schema can nominate paragraphs that should be rendered in a
            distinct way, keyed with the class attribute. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="icon" type="sch:uriValue">
        <xs:annotation>
          <xs:documentation>The location of a graphics file containing some visible representation
            of the severity, significance or other grouping of the associated element. <br/>An
            implementation is not required to make use of this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="param">
    <xs:annotation>
      <xs:documentation> A name-value pair providing parameters for an abstract pattern.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" use="required" type="sch:nameValue">
        <xs:annotation>
          <xs:documentation> The required name attribute is an XML name with no colon.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="value" use="required" type="sch:non-empty-string">
        <xs:annotation>
          <xs:documentation> The required value attribute is a fragment of a query.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pattern">
    <xs:annotation>
      <xs:documentation> A structure, simple or complex. A set of rules giving constraints that are
        in some way related. The id attribute provides a unique name for the pattern and is required
        for abstract patterns. <br/> When a pattern element has the attribute abstract with a value
        true, then the pattern defines an abstract pattern. An abstract pattern shall not have a
        is-a attribute and shall have an id attribute.<br/> When a pattern element has the attribute
        is-a with a value specifying the name of an abstract pattern, then the pattern is an
        instance of an abstract pattern. Such a pattern shall not contain any rule elements, but
        shall have param elements for all parameters used in the abstract
      pattern.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:include"/>
        <xs:element ref="sch:title"/>
        <xs:element ref="sch:p"/>
        <xs:element ref="sch:let"/>
        <xs:element ref="sch:rule"/>
        <xs:element ref="sch:param"/>
      </xs:choice>
      <xs:attribute name="documents" type="sch:pathValue">
        <xs:annotation>
          <xs:documentation>
            The optional documents attribute provides IRIs of subordinate document the rule contexts are relative
            to. If the expression evaluates to more than one IRI, then the pattern is sought in each of the documents.
            The documents attribute is evaluated in the context of the original instance document root. <br/>
            NOTE The documents attribute was not part of ISO/IEC 19757-3:2006.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:rich"/>
      <xs:attributeGroup ref="sch:foreign"/>
      <xs:attribute name="abstract" default="false">
        <xs:annotation>
          <xs:documentation> If true defines an abstract pattern. Possible values are true and
            false. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true">
              <xs:annotation>
                <xs:documentation>Defines an abstract pattern.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="false">
              <xs:annotation>
                <xs:documentation>Specifies that the pattern is not abstract.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The id attribute provides a unique name for the pattern and is required
            for abstract patterns. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="is-a" type="xs:IDREF">
        <xs:annotation>
          <xs:documentation> When a pattern element has the attribute is-a with a value specifying
            the name of an abstract pattern, then the pattern is an instance of an abstract pattern.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="phase">
    <xs:annotation>
      <xs:documentation> A grouping of patterns, to name and declare variations in schemas, for
        example, to support progressive validation. The implementation determines which phase to use
        for validating documents, for example by user command.<br/> Two names, #ALL and #DEFAULT,
        have special meanings. The name #ALL is reserved and available for use by implementations to
        denote that all patterns are active. The name #DEFAULT is reserved and available for use by
        implementations to denote that the name given in in the defaultPhase attribute on the schema
        element should be used. If no defaultPhase is specified, then all patterns are active.
        NOTE:<br/> The names #ALL and #DEFAULT shall not be used in a Schematron schema. They are
        for use when invoking or configuring schema validation, for example as a command-line
        parameter. <br/> The icon, see and fpi attributes allow rich interfaces and documentation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:include"/>
        <xs:element ref="sch:p"/>
        <xs:element ref="sch:let"/>
        <xs:element ref="sch:active"/>
      </xs:choice>
      <xs:attribute name="id" use="required" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The required id attribute is the name of the phase. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:rich"/>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="properties">
    <xs:annotation>
      <xs:documentation>
        A section containing individual property elements.<br/>
        NOTE The properties element was not part of ISO/IEC 19757-3:2006.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="sch:property"/>
      </xs:sequence>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="property">
    <xs:annotation>
      <xs:documentation>
        An element to declare additional arbitrary properties for the subjects of failed assertions and
        successful reports.<br/>
        NOTE 1 The property element is suitable for linking assertions or reports to actions, to additional metadata,
        to datatyping, and to dynamically extracted text related to the subject.<br/>
        NOTE 2 Where the property value contains elements in a well-known namespace or where the scheme
        used is otherwise obvious or unnecessary, the scheme element may be omitted. For example, if the property
        element contains an ISO/IEC 19757-7 Character Repertoire Description Language schema, no scheme attribute
        is appropriate.<br/>
        NOTE 3 Properties are defined as assertions in order to associate assertion text with the property. A property
        of an assert element typically should be information for validation. A property of a report element typically
        should be information for document augmentation (post schema validation information set.)<br/>
        NOTE 4 The property element was not part of ISO/IEC 19757-3:2006.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:name"/>
        <xs:element ref="sch:value-of"/>
        <xs:element ref="sch:emph"/>
        <xs:element ref="sch:dir"/>
        <xs:element ref="sch:span"/>
      </xs:choice>
      <xs:attribute name="id" use="required" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The unique identifier with the schema for the property element.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="role" type="sch:roleValue">
        <xs:annotation>
          <xs:documentation>A neme describing the function of the property. 
            The values of the role attributes are neither defined nor reserved.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="scheme">
        <xs:annotation>
          <xs:documentation>
            The optional scheme element should be an IRI or other public identifier which specifies the notation
            used for the metadata value.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="report" type="sch:assertReportType">
    <xs:annotation>
      <xs:documentation> An assertion made about the context nodes. The data content is a
        natural-language assertion. <br/> The natural-language assertion shall be a positive
        statement of a found pattern or a negative statement of a constraint. NOTE:<br/> The
        natural-language assertion may contain information about actual values in addition to
        expected values and may contain diagnostic information. Users should note, however,that the
        diagnostic element is provided for such information to encourage clear statement of the
        natural-language assertion. </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="rule">
    <xs:annotation>
      <xs:documentation> A list of assertions tested within the context specified by the required
        context attribute. NOTE:<br/> It is not an error if a rule never fires in a document. In
        order to test that a document always has some context, a new pattern should be created from
        the context of the document, with an assertion requiring the element or attribute.<br/> When
        the rule element has the attribute abstract with a value true, then the rule is an abstract
        rule. An abstract rule shall not have a context attribute. An abstract rule is a list of
        assertions that will be invoked by other rules belonging to the same pattern using the
        extends element. Abstract rules provide a mechanism for reducing schema size.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sch:foreign"/>
        <xs:element ref="sch:include"/>
        <xs:element ref="sch:let"/>
        <xs:element ref="sch:assert"/>
        <xs:element ref="sch:report"/>
        <xs:element ref="sch:p"/>
        <xs:element name="extends">
          <xs:annotation>
            <xs:documentation> Abstract rules are named lists of assertions without a context expression.
              The current rule uses all the assertions from the abstract rule it extends.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="rule" use="required" type="xs:IDREF">
              <xs:annotation>
                <xs:documentation> The required rule attribute references an abstract rule.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attributeGroup ref="sch:foreign-empty"/>
          </xs:complexType>
        </xs:element>        
      </xs:choice>
      <xs:attribute name="flag" type="sch:flagValue">
        <xs:annotation>
          <xs:documentation> The flag attribute allows more detailed outcomes. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:rich"/>
      <xs:attributeGroup ref="sch:linkable"/>
      <xs:attributeGroup ref="sch:foreign"/>
      <xs:attribute name="abstract" default="false">
        <xs:annotation>
          <xs:documentation> When the rule element has the attribute abstract with a value true,
            then the rule is an abstract rule. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true">
              <xs:annotation>
                <xs:documentation> Declares an abstract rule. </xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="false">
              <xs:annotation>
                <xs:documentation> Explicitely specify that the rule is not abstract.
                </xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation> The unique identifier with the schema for the rule element.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="context" type="sch:pathValue">
        <xs:annotation>
          <xs:documentation> The context attribute specifies the rule context expression.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="span">
    <xs:annotation>
      <xs:documentation> A portion of some paragraph that should be rendered in a distinct way,
        keyed with the class attribute.<br/> An implementation is not required to make use of this
        element. </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:group ref="sch:foreign"/>
      <xs:attribute name="class" use="required" type="sch:classValue">
        <xs:annotation>
          <xs:documentation> An attribute that can be used for stylesheet style </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="title">
    <xs:annotation>
      <xs:documentation> A summary of the purpose or role of the schema or pattern, for the purpose
        of documentation or a rich user interface. <br/>An implementation is not required to make
        use of this element. </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="sch:dir"/>
      </xs:sequence>
      <xs:attributeGroup ref="sch:foreign"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="value-of">
    <xs:annotation>
      <xs:documentation> Finds or calculates values from the instance document to allow clearer
        assertions and diagnostics. <br/> Variable references in the select attribute are resolved
        in the scope of the current schema, phase, pattern and rule.<br/> An implementation which
        does not report natural-language assertions is not required to make use of this
        element.<br/>
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="select" use="required" type="sch:pathValue">
        <xs:annotation>
          <xs:documentation> The required select attribute is an expression evaluated in the current
            context that returns a string. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign-empty"/>
    </xs:complexType>
  </xs:element>
  <!-- common declarations -->
  <xs:element name="include">
    <xs:annotation>
      <xs:documentation> The required href attribute references an external well-formed XML document
        whose document element is a Schematron element of a type which allowed by the grammar for
        Schematron at the current position in the schema. The external document is inserted in place
        of the include element. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="href" use="required" type="sch:uriValue">
        <xs:annotation>
          <xs:documentation> References an external well-formed XML document.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sch:foreign-empty"/>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="extends">
    <xs:annotation>
      <xs:documentation>
        <p> This element allows you to include components from another Schematron module.</p>
        
        <p>The required <code>href</code> attribute references an external Schematron document. 
        The result is the inclusion of the top-level components from the referred Schematron document into the current document.</p>
        
        <p> WARNING: This element is experimental and it isn't included in <a href="http://www.schematron.com">ISO Schematron</a> standard.</p>
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="href" use="required" type="sch:uriValue">
        <xs:annotation>
          <xs:documentation> References an external well-formed XML document.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rule" type="xs:IDREF"/>
      <xs:attributeGroup ref="sch:foreign-empty"/>
    </xs:complexType>
  </xs:element>
  
  <xs:attributeGroup name="rich">
    <xs:attribute name="icon" type="sch:uriValue">
      <xs:annotation>
        <xs:documentation> The location of a graphics file containing some visible representation of
          the severity, significance or other grouping of the associated element.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="see" type="sch:uriValue">
      <xs:annotation>
        <xs:documentation> The URI of external information of interest to maintainers and users of
          the schema. </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fpi" type="sch:fpiValue">
      <xs:annotation>
        <xs:documentation> A formal public identifier for the schema, phase or other element.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="linkable">
    <xs:attribute name="role" type="sch:roleValue">
      <xs:annotation>
        <xs:documentation> A name describing the function of the assertion or context node in the
          pattern. If the assertion has a subject attribute, then the role labels the arc between
          the context node and any nodes which match the path expression given by the subject
          attribute. </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="subject" type="sch:pathValue">
      <xs:annotation>
        <xs:documentation> A path allowing more precise specification of nodes. The path expression
          is evaluated in the context of the context node of the current rule. If no subject
          attribute is specified, the current subject node may be used. </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="foreign">
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="sch:foreign-element"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="foreign">
    <xs:attributeGroup ref="sch:foreign-attributes"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="foreign-empty">
    <xs:attributeGroup ref="sch:foreign-attributes"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="foreign-attributes">
    <xs:anyAttribute processContents="lax" namespace="##other"/>
  </xs:attributeGroup>
  <xs:group name="foreign-element">
    <xs:choice>
      <xs:any namespace="##other" processContents="lax"/>
      <xs:any namespace="##local" processContents="skip"/>
    </xs:choice>
  </xs:group>
  <!-- Data types -->
  <xs:simpleType name="uriValue">
    <xs:restriction base="xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="pathValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="exprValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="fpiValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="langValue">
    <xs:restriction base="xs:language"/>
  </xs:simpleType>
  <xs:simpleType name="roleValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="flagValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="nameValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!-- In the default query language binding, xsd:NCNAME -->
  <xs:simpleType name="classValue">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="non-empty-string">
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
