<?xml version="1.0" encoding="UTF-8"?>
<function-usage function="write-doc">
    <testenviron> In order to try out the examples, start a command shell and move to folder
        $FOXPATH/examples-functions/write-named-doc. </testenviron>
    <examples>
        <example tag="Basic use">
            <description> 
                Write a selected document to a file with a new name. The written file is indented, but
                indentation may be irregular, if the input file haa an irregular indentation. 
            </description>
            <code> 
                fox "data*/airports*.xml[\\@icao = 'EFEU']/write-named-doc('output', 'air.xml')" 
            </code>
        </example>
        <example tag="Indentation normalized">
            <description> 
                Write a selected document, enforcing regular indentation. This is achieved by submitting 
                the input document to function 'pretty-node', which removes any existing pretty-print 
                nodes and thus enforces a complete re-indentation.
            </description>
            <code> 
                fox "data*/airports*.xml[\\@icao = 'EFEU']/pretty-node()/write-named-doc('output', 'air.xml')" 
            </code>
        </example>
        <example tag="Indentation removed">
            <description> 
                Write selected document, with any indentation removed. Function 'pretty-node' removes any 
                pretty-print nodes, and option 'noindent' prevents the construction of new ones.
            </description>
            <code> 
                fox "data*/airports*.xml[\\@icao = 'EFEU']/pretty-node()/write-named-doc('output', 'air.xml', 'noindent')" 
            </code>
        </example>
        <example tag="Use ec variant">
            <description> 
                Write selected documents, using the ec variant of write-doc. 
            </description>
            <code> 
                fox "data/*/airports*.xml/pretty-node() => write-doc-ec('output')" 
            </code>
        </example>
        <example tag="Document-dependent output folder">
            <description> 
                Write selected documents into folders derived from the document's base URI. This means
                that the documents may be written into different folders. As always, a non-existing
                output folder is created.
            </description>
            <code> 
                fox "data*/airport*.xml/pretty-node()/write-doc('output', 'docbase')" 
            </code>
        </example>
        <example tag="Write modified documents">
            <description> 
                Modifies documents and writes the results into a folder. The output documents
                have normalized indentation, as function 'delete-nodes' performs such normalization
                by default (unless option 'keepws' is used).
            </description>
            <code> 
                fox "data*/airports*.xml/delete-nodes('\\dst, \\source1')/write-doc('output')" 
            </code>
        </example>
        <example tag="Write document fragment">
            <description> 
                Writes a document fragment. The fragment is the 'airport' element with
                a particular ICAO code. The file name of the fragment is the file name of the 
                containing document, what might be confuging. Use functions write-named-doc, 
                write-renamed-doc, write-exnamed-doc in order to write to a different file 
                name.
            </description>
            <code> 
                fox "data*/airports*.xml\*\*[@icao eq 'EFEU']/write-doc('output')" 
            </code>
        </example>
    </examples>
</function-usage>
