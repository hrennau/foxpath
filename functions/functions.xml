<?xml version="1.0" encoding="UTF-8"?>
<functions>
    <function name="basedir-name" alias="bdname" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the name of the folder containing it.</summary>
        </documentation>
    </function>
    <function name="basedir-path" alias="bdpath" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the file path of the folder containing it.</summary>
        </documentation>
    </function>
    <function name="basedir-relpath" alias="bdrpath" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the relative file path of the folder containing it.</summary>
        </documentation>
    </function>
    <function name="basedir-reluri" alias="bdruri" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the relative file URI of the file containing it.</summary>
        </documentation>
    </function>
    <function name="basedir-uri" alias="bduri" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the file URI of the folder containing it.</summary>
        </documentation>
    </function>
    <function name="base-name" alias="bname" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the name of the file containing it.</summary>
        </documentation>
    </function>
    <function name="base-path" alias="bpath" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the file path of the file containing it.</summary>
        </documentation>
    </function>
    <function name="base-relpath" alias="brpath" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the relative file path of the file containing it.</summary>
        </documentation>
    </function>
    <function name="base-reluri" alias="bruri" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node the relative URI of the file containing it.</summary>
        </documentation>
    </function>
    <function name="base-uri" alias="buri" group="base" withEc="true">
        <documentation>
            <summary>Returns for each input node its base URI.</summary>
        </documentation>
    </function>
    <function name="child-name-seq" group="explore" withEc="true">
        <documentation>
            <summary>Returns for each input node the concatenated list of child element names.</summary>
        </documentation>
        <params>
            <param name="nodes" type="node()*" onlyEc="true"/>
            <param name="nameFilter" type="xs:string?" optional="true"/>
            <param name="options" type="xs:string?" optional="true"/>                                 
        </params> 
        <options>
            <option name="distinct" type="boolean" default="0"/>            
            <option name="namekind" type="string" default="lname">
                <documentation/>
                <values>
                    <value string="name"/>
                    <value string="lname"/>
                    <value string="jname"/>
                </values>
            </option>            
            <option name="sep" type="string" default="comma">
                <values>
                    <value string="comma"/>
                    <value string="newline"/>
                </values>
            </option>
            <option name="sort" type="boolean" default="0"/>            
        </options>
    </function>
    <function name="related-names" group="explore" withEc="true">
        <documentation>
            <summary>Returns for each input node the concatenated list of structurally related element names.</summary>
        </documentation>
        <params>
            <param name="nodes" type="node()*" onlyEc="true"/>
            <param name="nameFilter" type="xs:string?" optional="true"/>
            <param name="options" type="xs:string?" optional="true"/>                                 
        </params> 
        <options>
            <option name="sort" type="boolean" default="1"/>
            <option name="distinct" type="boolean" default="1"/>            
            <option name="sep" type="string" default="comma">
                <values>
                    <value string="comma"/>
                    <value string="newline"/>
                </values>
            </option>
            <option name="namekind" type="string" default="lname">
                <documentation/>
                <values>
                    <value string="name"/>
                    <value string="lname"/>
                    <value string="jname"/>
                </values>
            </option>            
        </options>
    </function>
    <function name="filter-items" group="matching">
        <documentation>
            <summary>Filters a sequence of items and retains only those with a string value 
                matching a Unified String Expression.</summary>
        </documentation>
    </function>
    <function name="frequencies" alias="freq f" group="statistics">
        <documentation>
            <summary>Returns distinct values and their frequences.</summary>
            <params>
                <param name="values" type="item()*" onlyEc="true"/>
                <param name="options" type="xs:string?" optional="true"/>                                 
            </params>
        </documentation>
        <options>
            <option name="format" type="string" default="txt">
                <documentation/>
                <values>
                    <value string="txt"/>
                    <value string="xml"/>
                    <value string="json"/>
                    <value string="lines"/>
                </values>
            </option>
            <option name="freq" type="string" default="count">
                <documentation/>
                <values>
                    <value string="count"/>
                    <value string="fraction"/>
                    <value string="percent"/>
                </values>
            </option>
            <option name="order" type="string" default="a">
                <documentation/>
                <values>
                    <value string="a"/>
                    <value string="d"/>
                    <value string="an"/>
                    <value string="dn"/>
                    <value string="af"/>
                    <value string="df"/>
                </values>
            </option>
            <option name="min" type="integer">
                <documentation/>
            </option>
            <option name="max" type="integer">
                <documentation/>
            </option>
            <option name="width" type="integer">
                <documentation/>
            </option>
        </options>
    </function>
    <function name="matches-pattern" group="matching">
        <documentation>
            <summary>Checks if an item matches a Unified String Expression.</summary>
        </documentation>
    </function>
    <function name="name-path" group="node-location" withEc="true">
        <documentation>
            <summary>Returns the name path of a node, consisting of slash-separated node names.</summary> 
            <params>
                <param name="nodes" type="node()*" onlyEc="true"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>
        <options>
            <option name="atts" type="string">
                <documentation/>
            </option>
            <option name="indexed" type="boolean">
                <documentation/>
            </option>
            <option name="length" type="integer" default="60">
                <documentation/>
            </option>
            <option name="namekind" type="string" default="lname">
                <documentation/>
                <values>
                    <value string="name"/>
                    <value string="lname"/>
                    <value string="jname"/>
                </values>
            </option>
            <option name="post" type="string">
                <documentation/>
                <values>
                    <value string="value"/>
                </values>
            </option>
            <option name="pre" type="string">
                <documentation/>
                <values>
                    <value string="base-name"/>
                    <value string="base-path"/>
                    <value string="base-relpath"/>
                </values>
            </option>
            <option name="steps" type="integer"/>
            <option name="text" type="boolean"/>
            <option name="withcontext" type="boolean"/>
        </options>
    </function>
    <function name="path-content" group="node-content" withEc="true">
        <documentation>
            <summary>Reports the relative paths from input nodes to their 
                descendant nodes.</summary> 
            <params>
                <param name="nodes" type="node()*" onlyEc="true"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>
        
        <options>
            <option name="atts" type="string">
                <documentation/>
            </option>
            <option name="format">
                <documentation/>
                <values>
                    <value string="txt"/>
                    <value string="xml"/>
                    <value string="json"/>
                </values>                
            </option>                
            <option name="freq" type="string" default="count">
                <documentation/>
                <values>
                    <value string="count"/>
                    <value string="fraction"/>
                    <value string="percent"/>
                </values>
            </option>
            <option name="length" type="integer" default="60">
                <documentation/>
            </option>
            <option name="min" type="integer">
                <documentation/>
            </option>
            <option name="max" type="integer">
                <documentation/>
            </option>
            <option name="namekind" type="string" default="lname">
                <documentation/>
                <values>
                    <value string="name"/>
                    <value string="lname"/>
                    <value string="jname"/>
                </values>
            </option>
            <option name="order" type="string" default="a">
                <documentation/>
                <values>
                    <value string="a"/>
                    <value string="d"/>
                    <value string="an"/>
                    <value string="dn"/>
                    <value string="af"/>
                    <value string="df"/>
                </values>
            </option>   
            <option name="post" type="string">
                <documentation/>
                <values>
                    <value string="value"/>
                </values>
            </option>
            <option name="pre" type="string">
                <documentation/>
                <values>
                    <value string="base-name"/>
                    <value string="base-path"/>
                    <value string="base-relpath"/>
                </values>
            </option>            
            <option name="width" type="integer">
                <documentation/>
            </option>
            <option name="withinner" type="boolean">
                <documentation/>
            </option>
        </options>
    </function>
    <function name="truncate" group="string-processing" withEc="true">
        <documentation>
            <summary>Truncates a string.</summary> 
            <params>
                <param name="strings" type="xs:anyAtomicType*" onlyEc="true"/>
                <param name="length" type="xs:string?integer"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>        
        <options>
            <option name="strict" type="boolean">
                <documentation/>
            </option>
            <option name="info" default="dots" type="string">
                <documentation/>
                <values>
                    <value string="empty"/>
                    <value string="dots"/>
                    <value string="count"/>
                </values>
            </option>
        </options>
    </function>
    <function name="table" group="reporter" withEc="true">
        <documentation>
            <summary>Writes a table.</summary> 
            <params>
                <param name="tuples" type="array(*)"/>
                <param name="headers" type="xs:string?"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>        
        <options>
            <option name="format" default="txt" type="string">
                <documentation/>
                <values>
                    <value string="txt"/>
                    <value string="xml"/>
                </values>
            </option>
            <option name="hanging" type="integer">
                <documentation>Default value for column property 'hanging indent width'.</documentation>
            </option>
            <option name="hlist" type="boolean">
                <documentation>Switch indicating an hlist table.</documentation>
            </option>
            <option name="initial-prefix" type="string">
                <documentation>Default value for column property 'initial prefix'.</documentation>
            </option>
            <option name="left-align" type="boolean">
                <documentation>Default value for column property 'left-align'.</documentation>
            </option>
            <option name="nil" type="string">
                <documentation>Default value for representing an absent column value.</documentation>
            </option>
            <option name="order" type="string" 
                    pattern="^\d+(a|d|c|an|dn|ac|dc)?(\.\d+(a|d|c|an|dn|ac|dc)?)*$"
                    patternExplanation="The value must consists of one or more dot-separated items, each one 
                      consisting of a column number, optionally followed by a|d|n|c|an|dn|ac|dc,
                      meaning ascending, descending, ascending numeric, descending numeric,
                      ascending case-insensitive, descending case-insensitive. Examples: 
                      3, 3.1, 3c.1c, 3dn.1c, 3dn.1c.4">
                <documentation>Default value for representing an absent column value.</documentation>
            </option>
            <option name="reorder" type="string" pattern="^\d+(\.\d+)*$">
                <documentation>Reorder the sequence of columns. The value is a dot-separated
                     list of column numbers, indicating their position in the new ordering.
                     Example: "3.1.2" means: display from left to right the third, first, 
                     second column. If the table has more columns than specified by the new 
                     order, the remaining columns will be appended in the original order. 
                     Example: when the table has five columns, "4.1.2" means a new order
                     4., 1., 2., 3., 5.</documentation>
            </option>
            <option name="split" type="string*">
                <documentation>Dot-separated list of values for column property 'newline split regex'.
                  If the number of values is smaller than the number of columns, the list value is 
                  applied to all remaining columns.</documentation>
            </option>
            <option name="width" type="string*" 
                    pattern="^(\*|(\*)?\d+)$"
                    patternExplanation="The value must be a dot-separated list 
                      of items, which are an integer number, or a number 
                      preceded by a * character, or only a * character. A 
                      number means a width equal to the number; a number 
                      preceded by * means a width which is the minimum of the 
                      number and the maximum string length occurring in the 
                      column; a * means a width equal to the maximum string 
                      length.">
                <documentation>Dot-separated list of column widths. If the number of values is smaller
                  than the number of columns, the last value is applied to all remaining columns.
                </documentation>
            </option>
        </options>
    </function>
    <function name="xsd.inheritance-report" group="module-xsd" withEc="true">
        <documentation>
            <summary>Reports type inheritance in a set of XSDs.</summary> 
            <params>
                <param name="xsds" type="xs:anyAtomicType*" onlyEc="true"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>        
        <options>
            <option name="base" type="string">
                <documentation>Filter selecting ultimate base types - consider only type 
                hierarchies with a selected ultimate base type</documentation>
            </option>
            <option name="tsummary" type="string">
                <documentation>Filter selecting type summary attributes. The available tokens are: 
                    bbase (built-in base), co (type content), aeg (type content names),
                    ki (type kind), sg (substitution group info), use (type usage).</documentation>
            </option>
        </options>
    </function>
    <function name="xsd.type-summary-report" group="module-xsd" withEc="true">
        <documentation>
            <summary>Provides type summaries.</summary> 
            <params>
                <param name="xsds" type="xs:anyAtomicType*" onlyEc="true"/>
                <param name="options" type="xs:string?" optional="true"/>
            </params>
        </documentation>        
        <options>
            <option name="scope" type="string">
                <documentation>The scope of types to be considered - global, local, all</documentation>
                <values>
                    <value string="global"/>
                    <value string="local"/>
                    <value string="all"/>
                </values>                
            </option>
            <option name="base" type="string">
                <documentation>Filter selecting base types - consider only types directly
                    derived from these types</documentation>
            </option>
            <option name="name" type="string">
                <documentation>Filter types by name - consider only types with a matching name</documentation>
            </option>
            <option name="tsummary" type="string">
                <documentation>Filter selecting type summary attributes. The available tokens are: 
                    bbase (built-in base), co (type content), aeg (type content names),
                    ki (type kind), sg (substitution group info), use (type usage).</documentation>
            </option>
        </options>
    </function>
    
</functions>
